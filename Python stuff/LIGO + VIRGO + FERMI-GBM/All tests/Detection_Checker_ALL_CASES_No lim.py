'''------HARD IMPORTS------'''
from __future__ import division
'''------HARD IMPORTS------'''
'''------STRUCTURED JET SIMULATION DATA------'''
thetaStrucList = (0.311711013,
0.322846475,
0.341496529,
0.35869701,
0.368912082,
0.390223233,
0.40701068,
0.42154365,
0.438145142,
0.456986664,
0.478322268,
0.505945441,
0.527711271,
0.546563055,
0.574092319,
0.58839203,
0.61155437,
0.633401338,
0.665293504,
0.733988158,
0.698791461,
0.77095764,
0.827024397,
0.868679924,
0.925334616,
0.978788939,
1.042590501,
1.102836584,
1.191392623,
1.158365118,
1.242605513,
1.314387802,
1.370932913,
1.450104466,
1.544653802,
1.645395033,
1.740388129,
1.821672668,
1.981748561,
1.893352504,
2.045352018,
2.16343571,
2.24064773,
2.337040647,
2.428999368,
2.560271953,
2.708172618,
2.864569937,
3.040653322,
3.273141562,
3.462051806,
3.687662071,
3.927780415,
4.125478709,
4.487923056,
4.747022966,
5.056287154,
5.273635384,
5.461668981,
5.776795476,
6.08859465,
6.646469773,
6.417328753,
7.178869386,
6.883338902,
7.539708831,
7.863290437,
8.259076083,
8.552992973,
9.04618403,
9.335440889,
9.770807032,
10.04806921,
10.29733217,
10.62712056,
10.77666894,
11.00494667,
11.31648355,
11.63683968,
11.96547595,
12.13265844,
12.30136594,
12.55904291,
12.38659737,
12.7332597,
12.91010595,
13.04397445,
13.27185707,
13.3618308,
13.50060584,
13.64014783,
13.82913363,
14.0205068,
14.21452827,
14.51323692,
14.51036723,
14.81529273,
14.91474671,
15.01734282,
15.33342742,
15.32989031,
15.54254381,
15.64894267,
15.75555062,
16.19996958,
16.54094608,
16.77095185,
17.24628585,
17.73450758,
18.49379061,
19.01732771,
19.83218686,
20.82628822,
20.25094898,
22.02501624,
21.41867904,
22.8095753,
23.95607819,
24.63424613,
25.33077732,
26.41876873,
27.54804272,
29.13462443,
27.35893712,
28.53121961,
29.95939082,
30.59098342,
31.67858492,
32.57536779,
33.49643352,
34.20372,
35.16850899,
36.41645478,
37.44365868,
38.23429192,
38.49856821
)

energyStrucList = [7.97E+51,
7.97E+51,
7.97E+51,
7.97E+51,
7.97E+51,
7.97E+51,
7.97E+51,
7.88E+51,
7.97E+51,
7.88E+51,
7.88E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.97E+51,
7.97E+51,
7.97E+51,
7.88E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.80E+51,
7.63E+51,
7.71E+51,
7.80E+51,
7.63E+51,
7.63E+51,
7.63E+51,
7.63E+51,
7.55E+51,
7.47E+51,
7.47E+51,
7.31E+51,
7.39E+51,
7.31E+51,
7.31E+51,
7.31E+51,
7.15E+51,
7.00E+51,
7.00E+51,
6.92E+51,
6.85E+51,
6.85E+51,
6.78E+51,
6.70E+51,
6.56E+51,
6.35E+51,
6.15E+51,
5.76E+51,
5.64E+51,
5.52E+51,
5.40E+51,
5.17E+51,
5.06E+51,
4.85E+51,
4.64E+51,
4.40E+51,
4.17E+51,
4.21E+51,
3.74E+51,
3.95E+51,
3.50E+51,
3.28E+51,
3.21E+51,
2.95E+51,
2.76E+51,
2.56E+51,
2.48E+51,
2.32E+51,
2.23E+51,
2.13E+51,
2.04E+51,
1.91E+51,
1.72E+51,
1.54E+51,
1.32E+51,
1.19E+51,
1.02E+51,
8.23E+50,
9.47E+50,
6.92E+50,
5.89E+50,
5.12E+50,
4.40E+50,
3.70E+50,
3.25E+50,
2.76E+50,
2.30E+50,
1.89E+50,
1.56E+50,
1.31E+50,
1.15E+50,
9.68E+49,
7.80E+49,
7.00E+49,
6.02E+49,
5.17E+49,
4.35E+49,
3.82E+49,
3.28E+49,
2.76E+49,
2.37E+49,
2.04E+49,
1.87E+49,
1.68E+49,
1.48E+49,
1.32E+49,
1.19E+49,
1.02E+49,
1.07E+49,
8.98E+48,
1.00E+49,
8.41E+48,
7.88E+48,
7.08E+48,
6.21E+48,
5.95E+48,
5.01E+48,
4.49E+48,
5.46E+48,
4.90E+48,
4.03E+48,
3.54E+48,
3.18E+48,
2.85E+48,
2.51E+48,
2.25E+48,
1.89E+48,
1.63E+48,
1.37E+48,
1.23E+48,
1.13E+48
]

thetaOffList = [0.0, 0.0031478884304506943, 0.006295776860901389, 0.009443665291352083, 0.012591553721802777, 0.015739442152253473, 0.018887330582704167, 0.02203521901315486, 0.025183107443605555, 0.02833099587405625, 0.031478884304506946, 0.034626772734957637, 0.037774661165408334, 0.040922549595859024, 0.04407043802630972, 0.04721832645676041, 0.05036621488721111, 0.053514103317661814, 0.0566619917481125, 0.0598098801785632, 0.06295776860901389, 0.06610565703946458, 0.06925354546991527, 0.07240143390036596, 0.07554932233081667, 0.07869721076126736, 0.08184509919171805, 0.08499298762216875, 0.08814087605261944, 0.09128876448307013, 0.09443665291352082, 0.09758454134397153, 0.10073242977442222, 0.10388031820487291, 0.10702820663532363, 0.1101760950657743, 0.113323983496225, 0.11647187192667569, 0.1196197603571264, 0.12276764878757708, 0.12591553721802778, 0.12906342564847847, 0.13221131407892917,0.13535920250937986, 0.13850709093983055, 0.14165497937028124, 0.14480286780073193, 0.14795075623118265, 0.15109864466163334, 0.15424653309208403, 0.15739442152253472, 0.1605423099529854, 0.1636901983834361, 0.1668380868138868, 0.1699859752443375, 0.1731338636747882, 0.1762817521052389, 0.17942964053568958, 0.18257752896614027, 0.18572541739659096, 0.18887330582704165, 0.19202119425749237, 0.19516908268794306, 0.19831697111839378, 0.20146485954884444, 0.20461274797929513, 0.20776063640974582, 0.2109085248401965, 0.21405641327064726, 0.21720430170109792, 0.2203521901315486, 0.22350007856199933, 0.22664796699245, 0.22979585542290068, 0.23294374385335137, 0.2360916322838021, 0.2392395207142528, 0.24238740914470347, 0.24553529757515416, 0.24868318600560488, 0.25183107443605557, 0.25497896286650623, 0.25812685129695695, 0.2612747397274076, 0.26442262815785833, 0.267570516588309, 0.2707184050187597, 0.27386629344921043, 0.2770141818796611, 0.2801620703101118, 0.2833099587405625, 0.2864578471710132, 0.28960573560146385, 0.29275362403191457, 0.2959015124623653, 0.29904940089281595, 0.30219728932326667, 0.30534517775371733, 0.30849306618416805, 0.31164095461461877, 0.31478884304506943, 0.31793673147552015, 0.3210846199059708, 0.32423250833642153, 0.3273803967668722, 0.3305282851973229, 0.3336761736277736, 0.3368240620582243, 0.339971950488675, 0.3431198389191257, 0.3462677273495764, 0.34941561578002706, 0.3525635042104778, 0.35571139264092844, 0.35885928107137915, 0.36200716950182993, 0.36515505793228054, 0.36830294636273125, 0.3714508347931819, 0.37459872322363263, 0.3777466116540833, 0.380894500084534, 0.38404238851498473, 0.3871902769454354, 0.3903381653758861, 0.3934860538063368, 0.39663394223678755, 0.39978183066723816, 0.4029297190976889, 0.4060776075281396, 0.40922549595859026, 0.41237338438904103, 0.41552127281949164, 0.41866916124994236, 0.421817049680393, 0.42496493811084374, 0.4281128265412945, 0.4312607149717451, 0.43440860340219584, 0.4375564918326465, 0.4407043802630972, 0.4438522686935479, 0.44700015712399865, 0.4501480455544493, 0.4532959339849, 0.4564438224153507, 0.45959171084580136, 0.46273959927625213, 0.46588748770670274, 0.46903537613715346, 0.4721832645676042, 0.47533115299805484, 0.4784790414285056, 0.4816269298589563, 0.48477481828940694, 0.4879227067198576, 0.4910705951503083, 0.49421848358075904, 0.49736637201120976, 0.5005142604416604, 0.5036621488721111, 0.5068100373025618, 0.5099579257330125, 0.5131058141634631, 0.5162537025939139, 0.5194015910243646, 0.5225494794548152, 0.525697367885266, 0.5288452563157167, 0.5319931447461673, 0.535141033176618, 0.5382889216070688, 0.5414368100375194, 0.5445846984679701, 0.5477325868984209, 0.5508804753288715, 0.5540283637593222, 0.5571762521897728, 0.5603241406202236, 0.5634720290506743, 0.566619917481125, 0.5697678059115758, 0.5729156943420264, 0.576063582772477, 0.5792114712029277, 0.5823593596333785, 0.5855072480638291, 0.5886551364942798, 0.5918030249247306, 0.5949509133551812, 0.5980988017856319, 0.6012466902160826, 0.6043945786465333, 0.6075424670769841, 0.6106903555074347, 0.6138382439378854, 0.6169861323683361, 0.6201340207987868, 0.6232819092292375, 0.6264297976596882, 0.6295776860901389, 0.6327255745205895, 0.6358734629510403, 0.6390213513814911, 0.6421692398119416, 0.6453171282423923, 0.6484650166728431, 0.6516129051032937, 0.6547607935337444, 0.6579086819641952, 0.6610565703946458, 0.6642044588250965, 0.6673523472555472, 0.670500235685998, 0.6736481241164486, 0.6767960125468994, 0.67994390097735, 0.6830917894078007, 0.6862396778382513, 0.689387566268702, 0.6925354546991528, 0.6956833431296034, 0.6988312315600541, 0.7019791199905049, 0.7051270084209555, 0.7082748968514063, 0.7114227852818569, 0.7145706737123076, 0.7177185621427583, 0.720866450573209, 0.7240143390036599, 0.7271622274341104, 0.7303101158645611, 0.7334580042950117, 0.7366058927254625, 0.7397537811559133, 0.7429016695863638, 0.7460495580168146, 0.7491974464472653, 0.7523453348777159, 0.7554932233081666, 0.7586411117386174, 0.761789000169068, 0.7649368885995187, 0.7680847770299695, 0.7712326654604201, 0.7743805538908708, 0.7775284423213216, 0.7806763307517722, 0.7838242191822229, 0.7869721076126736, 0.7901199960431243, 0.7932678844735751, 0.7964157729040257, 0.7995636613344763, 0.8027115497649271, 0.8058594381953778, 0.8090073266258285, 0.8121552150562792, 0.8153031034867299, 0.8184509919171805, 0.8215988803476312, 0.8247467687780821, 0.8278946572085326, 0.8310425456389833, 0.834190434069434, 0.8373383224998847, 0.8404862109303355, 0.843634099360786, 0.8467819877912368, 0.8499298762216875, 0.8530777646521381, 0.856225653082589, 0.8593735415130396, 0.8625214299434902, 0.8656693183739409, 0.8688172068043917, 0.8719650952348423, 0.875112983665293, 0.8782608720957438, 0.8814087605261944, 0.8845566489566451, 0.8877045373870958, 0.8908524258175465, 0.8940003142479973, 0.8971482026784479, 0.9002960911088986, 0.9034439795393493, 0.9065918679698, 0.9097397564002507, 0.9128876448307014, 0.9160355332611521, 0.9191834216916027, 0.9223313101220535, 0.9254791985525043, 0.9286270869829548, 0.9317749754134055, 0.9349228638438563, 0.9380707522743069, 0.9412186407047577, 0.9443665291352084, 0.947514417565659, 0.9506623059961097, 0.9538101944265603, 0.9569580828570112, 0.9601059712874618, 0.9632538597179126, 0.9664017481483632, 0.9695496365788139, 0.9726975250092645, 0.9758454134397152, 0.978993301870166, 0.9821411903006166, 0.9852890787310673, 0.9884369671615181, 0.9915848555919687, 0.9947327440224195, 0.9978806324528701, 1.0010285208833207, 1.0041764093137715, 1.0073242977442223, 1.0104721861746728, 1.0136200746051236, 1.0167679630355744, 1.019915851466025, 1.0230637398964757, 1.0262116283269263, 1.029359516757377, 1.0325074051878278, 1.0356552936182783, 1.0388031820487291, 1.04195107047918, 1.0450989589096304, 1.0482468473400812, 1.051394735770532, 1.0545426242009825, 1.0576905126314333, 1.060838401061884, 1.0639862894923346, 1.0671341779227854, 1.070282066353236, 1.0734299547836867, 1.0765778432141375, 1.079725731644588, 1.0828736200750388, 1.0860215085054896, 1.0891693969359402, 1.092317285366391, 1.0954651737968417, 1.0986130622272923, 1.101760950657743, 1.1049088390881938, 1.1080567275186444, 1.1112046159490951, 1.1143525043795457, 1.1175003928099965, 1.1206482812404472, 1.1237961696708978, 1.1269440581013486, 1.1300919465317993, 1.13323983496225, 1.1363877233927007, 1.1395356118231517, 1.142683500253602, 1.1458313886840528, 1.1489792771145035, 1.152127165544954, 1.1552750539754049, 1.1584229424058554, 1.1615708308363064, 1.164718719266757, 1.1678666076972075, 1.1710144961276583,1.174162384558109, 1.1773102729885596, 1.1804581614190104, 1.1836060498494612, 1.1867539382799117, 1.1899018267103625, 1.1930497151408135, 1.1961976035712638, 1.1993454920017146,1.2024933804321651, 1.205641268862616, 1.2087891572930667, 1.2119370457235172, 1.2150849341539682, 1.2182328225844188, 1.2213807110148693, 1.2245285994453203, 1.2276764878757709,1.2308243763062214, 1.2339722647366722, 1.237120153167123, 1.2402680415975735, 1.2434159300280243, 1.246563818458475, 1.2497117068889256, 1.2528595953193764, 1.256007483749827, 1.2591553721802777, 1.2623032606107285, 1.265451149041179, 1.2685990374716298, 1.2717469259020806, 1.2748948143325312, 1.2780427027629822, 1.2811905911934327, 1.2843384796238833, 1.287486368054334, 1.2906342564847846, 1.2937821449152354, 1.2969300333456861, 1.300077921776137, 1.3032258102065875, 1.3063736986370382, 1.3095215870674888, 1.3126694754979396, 1.3158173639283903, 1.3189652523588409, 1.3221131407892917, 1.3252610292197424, 1.328408917650193, 1.331556806080644, 1.3347046945110943, 1.337852582941545, 1.341000471371996, 1.3441483598024464, 1.3472962482328972, 1.350444136663348, 1.3535920250937987, 1.3567399135242493, 1.3598878019547, 1.3630356903851508, 1.3661835788156014, 1.3693314672460521, 1.3724793556765027, 1.3756272441069535, 1.378775132537404, 1.3819230209678548, 1.3850709093983056, 1.3882187978287561, 1.391366686259207, 1.394514574689658, 1.3976624631201082, 1.400810351550559, 1.4039582399810098, 1.4071061284114603, 1.410254016841911, 1.4134019052723619, 1.4165497937028126, 1.4196976821332632, 1.4228455705637137, 1.4259934589941645, 1.4291413474246153, 1.4322892358550658, 1.4354371242855166, 1.4385850127159674, 1.441732901146418, 1.4448807895768687, 1.4480286780073197, 1.45117656643777, 1.4543244548682208, 1.4574723432986718, 1.4606202317291221, 1.463768120159573, 1.4669160085900235, 1.4700638970204745, 1.473211785450925, 1.4763596738813756, 1.4795075623118266, 1.4826554507422771, 1.4858033391727277, 1.4889512276031784, 1.4920991160336292, 1.4952470044640798, 1.4983948928945305, 1.5015427813249813, 1.5046906697554319, 1.5078385581858826, 1.5109864466163332, 1.514134335046784, 1.5172822234772347, 1.5204301119076853, 1.523578000338136, 1.5267258887685868, 1.5298737771990374, 1.5330216656294884, 1.536169554059939, 1.5393174424903895, 1.5424653309208403, 1.545613219351291, 1.5487611077817416, 1.5519089962121924, 1.5550568846426431, 1.5582047730730937, 1.5613526615035445, 1.5645005499339952, 1.5676484383644458, 1.5707963267948966]

#Gamma = 100
energyOffList = [8e+51, 8.000007116428042e+51, 8.000014261596675e+51, 8.000020752355992e+51, 8.000026142835672e+51, 8.000031708055945e+51, 8.00003412602321e+51, 8.000037246368737e+51, 8.000040386174107e+51, 8.000042947369381e+51, 8.000044708804451e+51, 8.000045567778245e+51, 8.000045554434805e+51, 8.000044334166625e+51, 8.000042342258424e+51, 8.000039039517205e+51, 8.000033725277687e+51, 8.000027196661306e+51, 8.000017276036357e+51, 8.000005694782481e+51, 7.999989690743664e+51, 7.999970884836726e+51, 7.999945361278315e+51, 8.000079299734689e+51, 8.000080241213618e+51, 8.000081730981357e+51, 8.000082557782511e+51, 8.000083913106769e+51, 8.000084627470712e+51, 8.000085910038944e+51, 8.000086502739921e+51, 8.000084577540949e+51, 8.000085245432535e+51, 8.000084995646917e+51, 8.000085202008808e+51, 8.000084687871376e+51, 8.000084534505978e+51, 8.00009059034968e+51, 8.000082817588894e+51, 8.000081652368968e+51, 8.000080030138447e+51, 8.00007795519253e+51, 8.0000757080879e+51, 8.000072475698899e+51, 8.000069141620379e+51, 8.000064729406427e+51, 8.000060198595222e+51, 8.000054012647277e+51, 8.0000467586218e+51, 8.000038886358035e+51, 8.000028991574617e+51, 8.000017391187889e+51, 8.000003961113173e+51, 7.999989705566162e+51, 7.999971426896003e+51, 7.999950172632101e+51, 2.9733027197710758e+51, 1.5931245327540685e+51, 7.963481508109669e+50, 4.020468439758637e+50, 2.2021217213726874e+50, 1.2744996737273345e+50, 7.397104231906848e+49, 4.523045177087885e+49, 2.8977677772550305e+49, 1.931842158720205e+49, 1.3316794678464153e+49, 9.442110833822473e+48, 6.857459081443361e+48, 5.084407366922999e+48, 3.838353799191894e+48, 2.9439995498017945e+48, 2.290041495273647e+48, 1.8039052598231057e+48, 1.4371458475020373e+48, 1.1567429481011547e+48, 9.397644850479807e+47, 7.700130693389688e+47, 6.358712625949331e+47, 5.288890845086042e+47, 4.4284106802305814e+47, 3.730862092362399e+47, 3.1612682513211787e+47, 2.6930019034980986e+47, 2.3056015978552564e+47, 1.983206355726511e+47, 1.7134209424608276e+47, 1.4864846079701929e+47, 1.2946561323248465e+47, 1.131754689445884e+47, 9.928140764793484e+46, 8.738201956091917e+46, 7.715102132445869e+46, 6.832177926185613e+46, 6.067530136929574e+46, 5.403086019680674e+46, 4.823862518199604e+46, 4.3173840023364636e+46, 3.8732195538230223e+46, 3.482613310853929e+46, 3.138187667097279e+46, 2.8337038195513826e+46, 2.5638676955581007e+46, 2.324171966869117e+46, 2.1107668984795103e+46, 1.9203543428473668e+46, 1.75010039420269e+46, 1.5975631501912466e+46, 1.4606327539860312e+46, 1.337481457775579e+46, 1.2265218947090947e+46, 1.1263720985687962e+46, 1.0358260896377315e+46, 9.538290674923578e+45, 8.79456429086713e+45, 8.118959730216676e+45, 7.504327656719082e+45, 6.944362376111132e+45, 6.433491540139912e+45, 5.966781639403957e+45, 5.539856833933152e+45, 5.1488290798118446e+45, 4.7902378464584405e+45, 4.4609979962699e+45, 4.15835462730269e+45, 3.879843869375575e+45, 3.623258781605301e+45, 3.386619630687941e+45, 3.168147938895937e+45, 2.966243782567696e+45, 2.779932943328826e+45, 2.606941230795485e+45, 2.4466054112569783e+45, 2.2978631623924615e+45, 2.159752607009275e+45, 2.0314017682734214e+45, 1.912019239806701e+45, 1.8008859185051707e+45, 1.6973476684818677e+45, 1.600808802112423e+45, 1.5107262792223696e+45, 1.4266045383849912e+45, 1.3479908854170028e+45, 1.2744713737390856e+45, 1.205667119534226e+45, 1.1412310017821345e+45, 1.0808447034344424e+45, 1.0242160553593492e+45, 9.710766493437628e+44, 9.211796904929381e+44, 8.742980628978859e+44, 8.302225855201834e+44, 7.887604379340097e+44, 7.497337379185119e+44, 7.129782549555874e+44,6.783422454960745e+44, 6.456853974461149e+44, 6.148778727220216e+44, 5.857994379521923e+44, 5.583386744888694e+44, 5.323922598499622e+44, 5.07864313556912e+44, 4.846658010830644e+44, 4.627139902901933e+44, 4.419319553183575e+44, 4.222481234166564e+44, 4.0359586066574965e+44, 3.8591309295618705e+44, 3.691419589536152e+44, 3.5322849210986234e+44, 3.3812232907105127e+44, 3.2377644209515375e+44, 3.1014689332481557e+44, 2.9719260897027022e+44, 2.848751716443807e+44, 2.731586292596208e+44, 2.6200931904755888e+44, 2.5139570539655105e+44,2.4128823032514516e+44, 2.316591755180191e+44, 2.224825349499517e+44, 2.1373389721208844e+44, 2.0539033673493792e+44, 1.9743031317487017e+44, 1.8983357829627642e+44, 1.8258108974059987e+44, 1.7565493112699925e+44, 1.6903823797779364e+44, 1.627151290057123e+44, 1.5667064233987328e+44, 1.5089067630339366e+44, 1.4536193438851193e+44, 1.4007187410478878e+44, 1.3500865940315946e+44, 1.3016111640326426e+44, 1.2551869217395874e+44, 1.2107141633742e+44, 1.1680986528592218e+44, 1.12725128817425e+44, 1.0880877901166286e+44, 1.050528411826718e+44, 1.0144976675667764e+44, 9.799240793616357e+43, 9.467399402184015e+43, 9.14881092741937e+43, 8.842867220543236e+43, 8.548991620104665e+43, 8.266637137786022e+43, 7.995284759252615e+43, 7.73444185208972e+43, 7.483640673466246e+43, 7.242436970710369e+43, 7.01040866848874e+43, 6.787154636742848e+43, 6.572293533963978e+43, 6.365462720781832e+43, 6.166317239204484e+43, 5.974528853182283e+43, 5.789785146476836e+43, 5.61178867410135e+43, 5.440256163862623e+43, 5.274917764777028e+43, 5.115516339358856e+43, 4.961806796987999e+43, 4.813555465754676e+43, 4.67053950035908e+43, 4.532546323808567e+43, 4.399373100807124e+43, 4.270826240874736e+43, 4.1467209293658713e+43, 4.026880684677891e+43, 3.911136940053466e+43,3.79932864848733e+43, 3.691301909344171e+43, 3.5869096153863995e+43, 3.4860111189944655e+43, 3.3884719164411103e+43, 3.2941633491541474e+43, 3.202962320970745e+43, 3.114751030448612e+43, 3.0294167173598853e+43, 2.946851422547484e+43, 2.8669517603755817e+43, 2.789618703053497e+43, 2.714757376157104e+43, 2.6422768647132227e+43, 2.572090029252074e+43, 2.504113331268006e+43, 2.4382666675642116e+43, 2.3744732129873817e+43, 2.3126592710892423e+43, 2.2527541322783407e+43, 2.1946899390527448e+43, 2.1384015579276694e+43, 2.083826457695146e+43, 2.0309045936741825e+43, 1.9795782976296756e+43, 1.929792173057268e+43, 1.8814929955485896e+43, 1.8346296179680197e+43, 1.7891528801873733e+43, 1.7450155231394737e+43, 1.702172106964998e+43, 1.6605789330401394e+43, 1.6201939696839058e+43, 1.5809767813559196e+43, 1.5428884611655565e+43, 1.505891566523508e+43, 1.469950057776034e+43, 1.4350292396710988e+43, 1.4010957055136958e+43, 1.3681172838756832e+43, 1.3360629877323847e+43, 1.304902965905585e+43, 1.2746084566986263e+43, 1.2451517436156557e+43, 1.2165061130628217e+43, 1.1886458139345746e+43, 1.1615460189933364e+43, 1.1351827879557964e+43, 1.1095330322034278e+43, 1.0845744810393027e+43, 1.060285649417182e+43, 1.0366458070728855e+43, 1.0136349489912983e+43, 9.912337671460573e+42, 9.694236234520155e+42, 9.481865238736715e+42, 9.275050936356767e+42, 9.073625534841623e+42, 8.877426969503602e+42, 8.68629868570216e+42, 8.500089430162609e+42, 8.318653050998868e+42, 8.141848306045129e+42, 7.969538679119285e+42, 7.80159220385958e+42, 7.637881294794169e+42, 7.478282585319571e+42, 7.32267677227846e+42, 7.170948466845466e+42, 7.02298605143925e+42, 6.87868154239675e+42, 6.737930458155583e+42, 6.600631692703054e+42, 6.466687394063595e+42, 6.33600284760328e+42, 6.208486363945654e+42, 6.084049171297739e+42, 5.962605311998017e+42, 5.844071543105529e+42, 5.728367240857534e+42, 5.615414308831174e+42, 5.505137089653164e+42, 5.397462280107094e+42, 5.292318849496103e+42, 5.18963796112426e+42, 5.0893528967672713e+42, 4.9913989840070914e+42, 4.8957135263133354e+42, 4.8022357357570375e+42, 4.71090666824892e+42, 4.621669161199134e+42, 4.534467773498739e+42,4.4492487277298e+42, 4.365959854512258e+42, 4.284550538902811e+42, 4.204971668761966e+42, 4.127175585011172e+42, 4.0511160337041614e+42, 3.9767481198402115e+42, 3.904028262850399e+42, 3.832914153690653e+42, 3.763364713478047e+42, 3.6953400536101587e+42, 3.628801437308835e+42, 3.5637112425335036e+42, 3.500032926210309e+42, 3.437730989726233e+42, 3.376770945639246e+42, 3.3171192855580446e+42, 3.2587434491461655e+42, 3.201611794207423e+42, 3.1456935678119985e+42, 3.0909588784230356e+42, 3.037378668986352e+42, 2.9849246909465905e+42, 2.933569479155329e+42, 2.8832863276372695e+42, 2.834049266183007e+42, 2.785833037737012e+42, 2.7386130765519168e+42, 2.6923654870800973e+42, 2.6470670235761127e+42, 2.6026950703831296e+42, 2.5592276228787996e+42, 2.516643269056365e+42, 2.474921171717705e+42, 2.434041051256315e+42, 2.3939831690087882e+42, 2.3547283111543633e+42, 2.3162577731426413e+42, 2.2785533446308668e+42, 2.241597294912296e+42, 2.2053723588182515e+42, 2.169861723077143e+42, 2.1350490131139835e+42, 2.1009182802753566e+42, 2.067453989464337e+42, 2.0346410071713068e+42, 2.0024645898867695e+42, 1.9709103728828428e+42, 1.9399643593504742e+42, 1.9096129098803175e+42, 1.8798427322751922e+42, 1.8506408716827825e+42, 1.8219947010375942e+42, 1.793891911801546e+42, 1.766320504993002e+42, 1.7392687824944653e+42, 1.7127253386295153e+42, 1.6866790519996466e+42, 1.6611190775726766e+42, 1.636034839013758e+42, 1.6114160212513225e+42, 1.5872525632696843e+42, 1.5635346511211238e+42, 1.5402527111498767e+42, 1.5173974034211343e+42, 1.4949596153483134e+42, 1.4729304555118696e+42, 1.4513012476636618e+42, 1.430063524910477e+42, 1.4092090240710816e+42, 1.3887296802010546e+42, 1.368617621279969e+42, 1.348865163055615e+42, 1.329464804040325e+42, 1.3104092206543218e+42, 1.2916912625115115e+42, 1.2733039478430594e+42, 1.2552404590544432e+42, 1.2374941384116437e+42, 1.2200584838524126e+42, 1.2029271449186401e+42, 1.1860939188060186e+42, 1.1695527465273062e+42, 1.153297709185549e+42, 1.137323024353947e+42, 1.1216230425589216e+42, 1.10619224386319e+42, 1.0910252345457757e+42, 1.0761167438759521e+42, 1.0614616209781314e+42, 1.0470548317850376e+42,1.0328914560762438e+42, 1.0189666845997384e+42, 1.0052758162736923e+42, 9.918142554661558e+41, 9.785775093503007e+41, 9.655611853328234e+41, 9.527609885534096e+41, 9.401727194530357e+41, 9.277922714090556e+41, 9.15615628435093e+41, 9.036388629437781e+41, 8.91858133570438e+41, 8.802696830559344e+41, 8.688698361869459e+41, 8.576549977918703e+41, 8.466216507908557e+41, 8.357663542982024e+41, 8.250857417757527e+41, 8.14576519235655e+41, 8.042354634911148e+41, 7.940594204537149e+41, 7.84045303475966e+41, 7.741900917377526e+41, 7.64490828675394e+41, 7.549446204521441e+41, 7.455486344688865e+41, 7.363000979138578e+41, 7.271962963503434e+41, 7.182345723411923e+41, 7.094123241091592e+41, 7.007270042319643e+41, 6.921761183712466e+41, 6.837572240342478e+41, 6.754679293674691e+41, 6.673058919813029e+41, 6.592688178048366e+41, 6.513544599698949e+41, 6.4356061772361504e+41, 6.358851353686529e+41, 6.283259012303239e+41, 6.2088084664988425e+41, 6.135479450032711e+41, 6.063252107445593e+41, 5.992106984734793e+41, 5.922025020262939e+41, 5.85298753589487e+41, 5.784976228355238e+41, 5.717973160801341e+41, 5.651960754605682e+41, 5.586921781341841e+41, 5.522839354968621e+41, 5.459696924207109e+41, 5.397478265105048e+41, 5.336167473783907e+41, 5.275748959363629e+41, 5.216207437060128e+41, 5.157527921451148e+41, 5.099695719905828e+41, 5.0426964261736445e+41, 4.9865159141286875e+41, 4.931140331664846e+41, 4.876556094738014e+41, 4.8227498815518595e+41, 4.7697086268825594e+41, 4.717419516539703e+41, 4.665869981959132e+41, 4.6150476949247465e+41, 4.5649405624155654e+41, 4.515536721575243e+41, 4.466824534800066e+41, 4.418792584943447e+41, 4.371429670632738e+41, 4.324724801696641e+41, 4.278667194699326e+41, 4.233246268579168e+41, 4.1884516403892734e+41, 4.144273121137159e+41, 4.100700711720912e+41, 4.057724598959716e+41, 4.015335151716068e+41, 3.9735229171075096e+41, 3.932278616805474e+41, 3.89159314341923e+41, 3.8514575569626914e+41, 3.811863081401961e+41]

#Gamma = 200
# energyOffList = [8e+51, 8.000000567848925e+51, 8.000000925222047e+51, 8.000001454512076e+51, 8.000001947366918e+51, 8.000000591597066e+51, 8.00000048173291e+51, 8.000000176414137e+51, 7.999999457677118e+51, 7.999998647144736e+51, 7.999997451989726e+51, 7.999995832348948e+51, 7.999993568582247e+51, 7.999990821285782e+51, 7.999987268141725e+51, 7.999982699410449e+51, 7.999976977669794e+51, 7.999969850160858e+51, 7.999960959323209e+51, 8.000004934398712e+51, 8.000004933636185e+51, 8.000005096345665e+51, 8.00000526969895e+51, 8.000005271160054e+51, 8.000005452210366e+51, 8.000005455786086e+51, 8.000005647713671e+51, 8.000005652520661e+51, 8.00000564228751e+51, 8.00000584587799e+51, 8.000004276079216e+51, 8.00000410175536e+51,8.000003666438066e+51, 8.000003331158112e+51, 8.000002705589435e+51, 8.000002149940832e+51, 8.000001252003937e+51, 8.000000342860407e+51, 8.000006025648456e+51, 7.999997769477486e+51, 7.99999604554641e+51, 7.999994114790797e+51, 7.999991840027673e+51, 7.999989141805756e+51, 7.999985961621991e+51, 7.999982271251502e+51, 7.999977833532749e+51, 7.999972813487296e+51, 7.999966966757998e+51, 7.999960003170489e+51, 8.000006407768042e+51, 8.00000634754171e+51, 8.000006458448905e+51, 8.000006399526825e+51, 8.000006343857394e+51, 8.000006469969805e+51, 2.2123515531386852e+51, 5.797277556816423e+50, 1.690889303068651e+50, 6.335798223828948e+49, 2.885959284421534e+49, 1.4104857543253652e+49, 7.478259458041398e+48, 4.276074970788155e+48, 2.6057502704245187e+48, 1.6719405041590182e+48, 1.118278966141745e+48, 7.736919401432671e+47, 5.504979711479437e+47, 4.010624053824781e+47, 2.9817831953851427e+47, 2.2766456718625528e+47, 1.7340625358003738e+47, 1.3511846078060668e+47, 1.0659176280301077e+47, 8.502822473143177e+46, 6.851447513487238e+46, 5.571769043713752e+46, 4.569390319097289e+46, 3.7764417003831597e+46, 3.143452363570172e+46, 2.63390681761598e+46, 2.2205389759027215e+46, 1.8827708792622558e+46, 1.6049178332907675e+46, 1.374914430947453e+46, 1.1833995078020285e+46, 1.0230516153261667e+46, 8.881014366099546e+45, 7.739705723687345e+45, 6.770015210010602e+45, 5.942541117895826e+45, 5.2335080755635753e+45, 4.6235825673131674e+45, 4.0969595326428055e+45, 3.640653245601183e+45, 3.2439432606316316e+45, 2.8979388825652747e+45, 2.595234825667078e+45, 2.3296374697393254e+45, 2.0959460968637223e+45, 1.8897771900017522e+45, 1.7074226413255483e+45, 1.5457348016840613e+45, 1.4020328814324977e+45, 1.2740264163297459e+45, 1.1597524347845439e+45, 1.0575236738208964e+45, 9.658857420777657e+44, 8.835815571639159e+44, 8.095217203504807e+44, 7.42759755430465e+44, 6.824713468913945e+44, 6.2793687773054265e+44, 5.785266987618159e+44, 5.336886663995191e+44, 4.929375702721959e+44, 4.558461399739145e+44, 4.220373751906174e+44, 3.9117798799611865e+44, 3.629727823762569e+44, 3.3715982565012663e+44, 3.1350629071131e+44, 2.918048679391035e+44, 2.7187066205057147e+44, 2.535385027341394e+44, 2.3666060915125243e+44, 2.2110455773707854e+44, 2.0675151051659316e+44, 1.9349466765514886e+44, 1.8126864385560206e+44, 1.6992270776958128e+44, 1.5941233853454228e+44, 1.4966688227616365e+44, 1.4062241929378692e+44, 1.3222105101424583e+44, 1.2441026984449686e+44, 1.1714240144221596e+44, 1.1037411035297297e+44, 1.0406596118319885e+44, 9.818202852231175e+43, 9.268954972238353e+43, 8.755861541215444e+43, 8.276189328324032e+43, 7.827438125596538e+43, 7.407318662387043e+43, 7.013732820100634e+43, 6.644755886419405e+43, 6.298620620170121e+43, 5.973702925709592e+43, 5.668508959834313e+43, 5.381663515242438e+43, 5.11189954292101e+43, 4.85804869185918e+43, 4.619032758516296e+43, 4.3938559507607985e+43, 4.181597881781326e+43, 3.981407218942377e+43, 3.792495920892071e+43, 3.614134003567619e+43, 3.4456447822182274e+43, 3.286400542278752e+43, 3.135818596979208e+43, 2.993357694047495e+43, 2.85851473782114e+43, 2.730821796600703e+43, 2.6098433681938834e+43, 2.4951738793761826e+43, 2.386435397459157e+43, 2.2832755343577337e+43, 2.185365525507281e+43, 2.092398467731763e+43, 2.0040877017273353e+43, 1.920165326224218e+43, 1.8403808321415677e+43, 1.7644998461713143e+43, 1.6923029742336277e+43, 1.623584736148666e+43, 1.558152583681693e+43, 1.4958259948472697e+43, 1.4364356380157114e+43, 1.3798225999559824e+43, 1.325837672482717e+43, 1.274340692856109e+43, 1.2251999335182103e+43, 1.1782915371412542e+43, 1.1334989933194995e+43, 1.0907126535570132e+43, 1.0498292814950487e+43, 1.0107516355870373e+43, 9.733880816679192e+42, 9.376522330827111e+42, 9.034626162360294e+42,8.707423596041618e+42, 8.394189044145074e+42, 8.094237353457393e+42, 7.80692129737725e+42, 7.53162923923428e+42, 7.2677829540785e+42, 7.014835597216188e+42, 6.772269808709398e+42, 6.53959594391196e+42, 6.316350420900855e+42, 6.1020941763789e+42, 5.896411222281953e+42, 5.698907295925695e+42, 5.509208597079782e+42, 5.3269606058619047e+42, 5.1518269758098695e+42, 4.983488496915647e+42, 4.8216421237978194e+42, 4.666000064547784e+42, 4.5162889261176334e+42, 4.3722489124216155e+42, 4.233633071603749e+42, 4.1002065891827876e+42, 3.9717461240240576e+42, 3.848039184306924e+42, 3.728883540859744e+42, 3.61408667542071e+42, 3.503465261556514e+42, 3.396844676129065e+42, 3.294058539349034e+42, 3.194948281591469e+42, 3.099362735273715e+42, 3.007157750213918e+42, 2.9181958309963264e+42, 2.832345794969026e+42, 2.74948244959347e+42, 2.6694862879511174e+42, 2.5922432012921214e+42, 2.517644207585051e+42, 2.4455851950963347e+42, 2.3759666800906434e+42, 2.308693577804276e+42, 2.243674985897804e+42, 2.1808239796460915e+42, 2.120057418171394e+42, 2.06129576107004e+42, 2.004462894823901e+42, 1.9494859684272932e+42, 1.8962952376952385e+42, 1.8448239177527563e+42, 1.7950080432361766e+42, 1.746786335766327e+42, 1.7001000782809038e+42, 1.6548929958387384e+42, 1.611111142531839e+42, 1.5687027941641548e+42, 1.5276183463757613e+42, 1.487810217911229e+42, 1.449232758748395e+42, 1.4118421628213597e+42, 1.3755963850867126e+42, 1.3404550626972765e+42, 1.3063794400612741e+42, 1.273332297577897e+42, 1.2412778838525397e+42, 1.2101818512061577e+42, 1.1800111943041374e+42, 1.1507341917399211e+42, 1.1223203504181945e+42, 1.0947403525911403e+42, 1.0679660054097472e+42, 1.0419701928596406e+42, 1.016726829958655e+42, 9.922108190997987e+41, 9.683980084300777e+41, 9.452651521614306e+41, 9.227898727160082e+41, 9.009506246131625e+41, 8.797266600107829e+41, 8.59097995818165e+41, 8.390453823022558e+41, 8.195502731132313e+41, 8.005947966593697e+41, 7.821617287649473e+41, 7.642344665483759e+41, 7.467970034611174e+41, 7.298339054311251e+41, 7.133302880574427e+41, 6.972717948053914e+41, 6.816445761544376e+41, 6.664352696533532e+41, 6.516309808394868e+41, 6.3721926498136875e+41, 6.231881096058293e+41, 6.095259177728408e+41, 5.962214920631669e+41, 5.832640192456409e+41, 5.706430555926108e+41, 5.583485128136057e+41, 5.463706445788675e+41, 5.3470003360569646e+41, 5.233275792819688e+41, 5.122444858024572e+41, 5.0144225079472765e+41, 4.909126544125843e+41, 4.8064774887607995e+41, 4.7063984843808946e+41, 4.608815197585541e+41, 4.51365572668199e+41, 4.4208505130460165e+41, 4.3303322560420716e+41, 4.242035831346474e+41, 4.155898212525951e+41, 4.071858395728556e+41, 3.989857327353529e+41, 3.909837834570499e+41, 3.831744558565715e+41, 3.755523890398829e+41, 3.681123909358309e+41, 3.608494323709355e+41, 3.537586413733171e+41, 3.4683529769605165e+41, 3.400748275507642e+41, 3.3347279854259744e+41, 3.270249147982114e+41, 3.2072701227872508e+41, 3.145750542699789e+41, 3.0856512704276654e+41, 3.0269343567605143e+41, 2.9695630003650026e+41, 2.9135015090789936e+41, 2.858715262644299e+41, 2.80517067681872e+41, 2.7528351688125846e+41, 2.7016771239955395e+41, 2.6516658638232847e+41, 2.6027716149351745e+41, 2.554965479375867e+41, 2.5082194058966848e+41, 2.462506162293835e+41, 2.417799308742363e+41, 2.374073172087186e+41, 2.3313028210530384e+41, 2.2894640423381335e+41, 2.2485333175567545e+41, 2.20848780099788e+41, 2.169305298168395e+41, 2.1309642450907085e+41, 2.0934436883257308e+41, 2.0567232656933537e+41, 2.0207831876641713e+41, 1.9856042193965132e+41, 1.9511676633947143e+41, 1.917455342764848e+41, 1.8844495850457727e+41, 1.8521332065935004e+41, 1.820489497498682e+41, 1.789502207016854e+41, 1.7591555294928578e+41, 1.729434090760707e+41, 1.7003229350017607e+41, 1.6718075120439888e+41, 1.6438736650863735e+41, 1.6165076188329035e+41, 1.589695968021103e+41, 1.5634256663308577e+41, 1.537684015659778e+41, 1.512458655751874e+41, 1.487737554166697e+41, 1.4635089965769905e+41, 1.4397615773828546e+41, 1.4164841906312724e+41, 1.393666021230179e+41, 1.3712965364464468e+41, 1.349365477678092e+41, 1.3278628524906841e+41, 1.3067789269089334e+41, 1.2861042179544484e+41, 1.2658294864211062e+41, 1.2459457298796394e+41, 1.2264441759037248e+41, 1.2073162755097076e+41, 1.1885536968027164e+41, 1.1701483188220268e+41, 1.1520922255788786e+41, 1.1343777002801258e+41, 1.1169972197314497e+41, 1.0999434489140302e+41, 1.083209235728692e+41, 1.0667876059021066e+41, 1.0506717580493125e+41, 1.0348550588875712e+41, 1.0193310385962665e+41, 1.004093386318165e+41, 9.891359457972176e+40, 9.744527111483968e+40, 9.6003782275527e+40, 9.458855632909536e+40, 9.319903538585764e+40, 9.183467502471583e+40, 9.049494392992528e+40, 8.91793235386645e+40, 8.788730769906391e+40, 8.661840233834658e+40, 8.537212514076639e+40, 8.414800523501546e+40, 8.294558289080353e+40, 8.1764409224313e+40, 8.060404591224714e+40, 7.946406491419784e+40, 7.834404820306417e+40, 7.724358750327258e+40, 7.616228403654808e+40, 7.509974827500122e+40, 7.405559970129585e+40, 7.302946657568239e+40, 7.202098570967811e+40, 7.102980224618486e+40, 7.005556944584871e+40, 6.909794847946839e+40, 6.815660822625738e+40, 6.723122507779221e+40, 6.632148274745446e+40, 6.542707208521914e+40, 6.454769089760694e+40, 6.368304377265289e+40, 6.283284190973792e+40, 6.199680295413064e+40, 6.117465083610414e+40, 6.0366115614483125e+40, 5.9570933324491e+40, 5.878884582976784e+40, 5.801960067843459e+40, 5.726295096307938e+40, 5.651865518455274e+40, 5.57864771194586e+40, 5.506618569122693e+40, 5.435755484466916e+40, 5.366036342390497e+40, 5.297439505357034e+40, 5.229943802320402e+40, 5.163528517472166e+40, 5.098173379288839e+40, 5.033858549870063e+40, 4.970564614559417e+40, 4.908272571839427e+40, 4.846963823493296e+40, 4.786620165025264e+40, 4.727223776332121e+40, 4.668757212619156e+40, 4.611203395552941e+40, 4.554545604644764e+40, 4.498767468857405e+40, 4.443852958430017e+40, 4.389786376913594e+40, 4.33655235341229e+40, 4.28413583502396e+40, 4.2325220794747575e+40, 4.1816966479420604e+40, 4.1316453980608334e+40, 4.082354477107866e+40, 4.0338103153592044e+40, 3.985999619615907e+40, 3.938909366893479e+40, 3.8925267982704335e+40, 3.8468394128915252e+40, 3.801834962121462e+40, 3.757501443845143e+40, 3.7138270969101152e+40, 3.670800395707332e+40, 3.6284100448869506e+40, 3.586644974204836e+40, 3.5454943334967154e+40, 3.5049474877762907e+40, 3.4649940124540414e+40, 3.4256236886733903e+40, 3.3868264987612297e+40, 3.3485926217896297e+40, 3.310912429245724e+40, 3.2737764808070064e+40, 3.237175520219123e+40, 3.201100471273525e+40, 3.165542433882287e+40, 3.130492680247428e+40, 3.095942651122574e+40, 3.0618839521640517e+40, 3.02830835036953e+40, 2.995207770601517e+40, 2.962574292193838e+40, 2.9304001456386727e+40, 2.898677709352315e+40, 2.8673995065171744e+40, 2.836558201998687e+40, 2.806146599334492e+40, 2.7761576377946847e+40, 2.746584389510758e+40, 2.7174200566717827e+40, 2.688657968786086e+40, 2.6602915800066783e+40, 2.6323144665187057e+40, 2.604720323987662e+40, 2.5775029650664727e+40, 2.5506563169602443e+40, 2.5241744190469427e+40, 2.498051420552858e+40, 2.4722815782813564e+40, 2.446859254393499e+40]

#Gamma = 300
# energyOffList = [8e+51, 7.999998954896975e+51, 7.999998664272455e+51, 7.999998202193358e+51, 7.999997546786484e+51, 7.999996685738783e+51, 7.999995537476918e+51, 7.999994018389045e+51, 7.999991953785009e+51, 7.999989393885401e+51, 7.999986093575937e+51, 7.999981789740692e+51, 7.999976435443543e+51, 8.000000663699944e+51, 8.000000753316221e+51, 8.000000831433052e+51, 8.000000813291023e+51, 8.000000890221381e+51, 8.000000871170375e+51, 8.000000939934257e+51, 8.00000092128793e+51, 8.000000988277898e+51, 8.000001046449942e+51, 8.000001093398341e+51, 8.000000071746018e+51, 7.99999983373793e+51, 7.999999566975411e+51, 7.999999212538537e+51, 7.999998790189835e+51, 7.99999819545649e+51, 7.999997566764819e+51, 7.99999681084168e+51, 7.999995799702092e+51, 7.999994681426364e+51, 7.999993258206363e+51, 7.999991648904562e+51, 7.999989639324057e+51, 7.999987349275429e+51, 7.999984540512211e+51, 7.999981214096011e+51, 7.999977403013085e+51, 7.999972817171722e+51, 8.000001188866317e+51, 8.000001162503416e+51, 8.000001126067796e+51, 8.000001196521476e+51, 8.000001169879379e+51, 8.000001238814241e+51, 8.000001214878382e+51, 8.000001174047406e+51, 8.000001245253703e+51, 8.000001215186978e+51, 8.000001278241083e+51, 8.000001256785292e+51, 8.000001236341177e+51, 8.000001290509061e+51, 1.563905737849283e+51, 8.865660463593224e+49, 3.975882372095574e+49, 1.6779667552239336e+49, 7.337348950053463e+48, 3.472581507898913e+48, 1.7961901371305563e+48,1.0076894104246653e+48, 6.049312732715243e+47, 3.834544599258358e+47, 2.5387748773254424e+47, 1.7411946738656107e+47, 1.2294578995920738e+47, 8.896616915144944e+46, 6.574385410785406e+46, 4.994282782727102e+46, 3.7838713356567956e+46, 2.9352850930466903e+46, 2.3062320965967437e+46, 1.8329327417056747e+46, 1.472018084167721e+46, 1.193437726167419e+46, 9.760139767241728e+45, 8.04591175189212e+45, 6.681703976260288e+45, 5.5866635164120966e+45, 4.7006498059137985e+45, 3.9784382063022304e+45, 3.385675078066046e+45, 2.896018194008907e+45, 2.4890906332743817e+45, 2.1490002366798952e+45, 1.863257031848246e+45, 1.6219738687733015e+45, 1.4172707330590797e+45, 1.2428269936798247e+45, 1.093542101087488e+45, 9.652764889762587e+44, 8.546522822197937e+44, 7.588989508248517e+44, 6.757329929793967e+44, 6.032635633830266e+44, 5.399180157710112e+44, 4.843828277730848e+44, 4.355564795753448e+44, 3.925116757182122e+44, 3.5446490981318858e+44, 3.2075183060397122e+44, 2.9080721455614744e+44, 2.6414861390727947e+44, 2.4036295087473744e+44, 2.190954839217186e+44, 2.0004069199982753e+44, 1.8293471596918263e+44, 1.675490692531622e+44, 1.5368538695600755e+44, 1.4117102773611816e+44, 1.298553784054739e+44, 1.1960673958914547e+44, 1.1030969341964176e+44, 1.0186287238381933e+44, 9.41770630337115e+43, 8.717359005403099e+43, 8.078293572375928e+43, 7.494355756811517e+43, 6.960087332523193e+43, 6.470638752942507e+43, 6.021693826227891e+43, 5.609404612082855e+43, 5.230335033996735e+43, 4.881411939719541e+43, 4.559882541271858e+43, 4.2632773310159404e+43, 3.9893777082022573e+43, 3.7368230229290634e+43, 3.502489394205297e+43, 3.2854503301827713e+43, 3.0842399066495147e+43, 2.8975322908487085e+43, 2.724126865259359e+43, 2.562935086209211e+43, 2.412968857271641e+43, 2.273330227513199e+43, 2.143202250356809e+43, 2.0218408607966457e+43, 1.9085676475221425e+43, 1.8027634126601607e+43, 1.703862425730156e+43, 1.611347290366627e+43, 1.5247443526796457e+43, 1.4436195890404559e+43,1.36757491879551e+43, 1.2962448941030999e+43, 1.2292937248953622e+43, 1.166412602020759e+43, 1.1073172860217961e+43, 1.0517459328403126e+43, 9.99457131094731e+42, 9.502281285058561e+42, 9.038532276154742e+42, 8.601423331949687e+42, 8.18919635718761e+42, 7.800224170173811e+42, 7.432999657561802e+42, 7.086125917362886e+42, 6.758307292058825e+42, 6.448341204230758e+42, 6.155110716437788e+42, 5.877577745326738e+42, 5.614776867279779e+42, 5.3658096593961235e+42, 5.1298395253852335e+42, 4.906086961079319e+42, 4.6938252188517396e+42, 4.4923763343035794e+42, 4.3011074822213115e+42, 4.119427632058995e+42, 3.946784476104678e+42, 3.782661606093446e+42, 3.6265759163586156e+42, 3.47807521370435e+42, 3.33673601605618e+42, 3.2021615236330374e+42, 3.0739797478971756e+42, 2.951841784903077e+42, 2.8354202208929666e+42, 2.7244076590935588e+42, 2.6185153576668195e+42, 2.5174719696689513e+42, 2.4210223766856693e+42, 2.3289266085489746e+42, 2.2409588422064754e+42, 2.1569064734179118e+42, 2.0765692555012243e+42, 1.999758499845413e+42, 1.9262963333593527e+42, 1.8560150084334364e+42, 1.7887562613635548e+42, 1.7243707155249123e+42, 1.6627173258908076e+42, 1.6036628617723316e+42, 1.5470814249101075e+42, 1.4928540002825607e+42, 1.4408680372076297e+42, 1.3910170585094104e+42, 1.3432002956984543e+42, 1.2973223482768808e+42, 1.2532928654279298e+42, 1.2110262484854703e+42, 1.170441372703458e+42, 1.1314613269596481e+42, 1.094013170132222e+42, 1.058027702984273e+42, 1.0234392544790855e+42, 9.901854815302997e+41, 9.582071812652442e+41, 9.274481149484073e+41, 8.978548427748893e+41, 8.693765688016567e+41, 8.419649953377785e+41, 8.155741861642041e+41, 7.901604379988103e+41, 7.65682159664404e+41, 7.420997584559888e+41, 7.193755332393265e+41, 6.974735738455885e+41, 6.763596663575251e+41, 6.560012039107822e+41, 6.363671026597712e+41, 6.174277225819062e+41, 5.991547928162601e+41, 5.815213412532203e+41, 5.645016281111202e+41, 5.4807108325347856e+41, 5.3220624701696286e+41, 5.168847143354826e+41, 5.02085081960128e+41, 4.877868985876908e+41, 4.739706177229092e+41, 4.606175531108994e+41, 4.477098365868247e+41, 4.352303781997452e+41, 4.231628284767672e+41,4.114915427020736e+41, 4.002015470934883e+41, 3.8927850676652926e+41, 3.787086953828797e+41, 3.684789663866354e+41, 3.58576725737651e+41, 3.489899060569622e+41, 3.3970694210452117e+41, 3.307167475142072e+41, 3.2200869271589606e+41, 3.1357258397838733e+41, 3.0539864351115323e+41, 2.974774905664556e+41, 2.8980012348702703e+41, 2.82357902647612e+41, 2.751425342418345e+41, 2.6814605486865898e+41, 2.613608168754028e+41, 2.54779474416789e+41, 2.4839497019184254e+41, 2.4220052282267404e+41, 2.361896148412303e+41, 2.303559812520696e+41, 2.246935986409914e+41, 2.1919667480111428e+41, 2.1385963884954264e+41, 2.0867713180932506e+41, 2.0364399763277914e+41, 1.9875527464361784e+41, 1.9400618737654393e+41, 1.893921387941664e+41, 1.8490870286219517e+41, 1.805516174649242e+41, 1.763167776439591e+41, 1.7220022914410569e+41, 1.6819816225119522e+41, 1.6430690590740787e+41, 1.6052292209048445e+41, 1.5684280044389322e+41, 1.53263253145716e+41, 1.4978111000469073e+41, 1.4639331377241386e+41, 1.4309691566131358e+41, 1.3988907105852867e+41, 1.3676703542635663e+41, 1.3372816038038671e+41, 1.3076988993693703e+41, 1.2788975692179389e+41, 1.250853795327043e+41, 1.2235445804842142e+41, 1.1969477167749262e+41, 1.1710417554030796e+41, 1.1458059777825812e+41, 1.1212203678416117e+41, 1.0972655854840151e+41, 1.0739229411549962e+41, 1.051174371461116e+41, 1.029002415796684e+41, 1.0073901939313402e+41, 9.86321384515638e+40, 9.657802044634955e+40, 9.457513891726615e+40, 9.262201735457878e+40, 9.071722737768913e+40, 8.8859386986945e+40, 8.704715888540053e+40, 8.527924886748761e+40, 8.355440427165988e+40, 8.187141249426489e+40, 8.022909956197878e+40, 7.862632876029248e+40, 7.70619993156487e+40, 7.553504512893459e+40, 7.404443355814242e+40, 7.258916424812476e+40, 7.116826800544322e+40, 6.978080571642278e+40, 6.8425867306592425e+40, 6.710257073979534e+40, 6.58100610552993e+40, 6.454750944135378e+40, 6.331411234367041e+40, 6.210909060739625e+40, 6.093168865121029e+40, 5.97811736722169e+40, 5.865683488040143e+40, 5.755798276142699e+40, 5.648394836664678e+40, 5.543408262921731e+40, 5.440775570527897e+40, 5.340435633919164e+40, 5.242329125186935e+40, 5.146398455129747e+40, 5.052587716435266e+40, 4.960842628908419e+40, 4.871110486665438e+40, 4.78334010721633e+40, 4.69748178236272e+40, 4.6134872308398015e+40, 4.531309552634933e+40,4.450903184917986e+40, 4.372223859521687e+40, 4.2952285619120567e+40, 4.2198754915918577e+40, 4.146124023882873e+40, 4.0739346730340713e+40, 4.0032690566057903e+40, 3.934089861081438e+40, 3.866360808660868e+40, 3.8000466251905917e+40, 3.735113009189001e+40, 3.6715266019250096e+40, 3.6092549585116733e+40, 3.548266519976587e+40, 3.488530586273624e+40, 3.430017290200775e+40, 3.372697572191207e+40, 3.316543155945732e+40, 3.261526524875552e+40, 3.2076208993262923e+40, 3.154800214554794e+40, 3.103039099431604e+40, 3.0523128558429105e+40, 3.0025974387670084e+40, 2.9538694370010994e+40, 2.9061060545150516e+40, 2.859285092410291e+40, 2.8133849314617285e+40, 2.7683845152229738e+40, 2.724263333674061e+40, 2.6810014073934267e+40, 2.638579272235298e+40, 2.596977964495243e+40, 2.5561790065463854e+40, 2.516164392930553e+40, 2.476916576888206e+40, 2.4384184573121614e+40, 2.400653366110609e+40, 2.363605055965276e+40, 2.327257688471329e+40, 2.291595822645925e+40, 2.2566044037930794e+40, 2.222268752712392e+40, 2.1885745552406334e+40, 2.1555078521142852e+40, 2.1230550291429154e+40, 2.0912028076824133e+40, 2.0599382353985491e+40, 2.0292486773109086e+40, 1.9991218071079656e+40, 1.9695455987244817e+40, 1.9405083181722076e+40, 1.9119985156160833e+40, 1.8840050176873477e+40, 1.8565169200261978e+40, 1.829523580046346e+40, 1.8030146099142808e+40, 1.7769798697362224e+40, 1.7514094609462656e+40, 1.7262937198888748e+40, 1.701623211589812e+40, 1.677388723709287e+40, 1.653581260671487e+40, 1.6301920379650297e+40, 1.6072124766086541e+40, 1.5846341977771336e+40, 1.5624490175822168e+40, 1.5406489420037987e+40, 1.5192261619664385e+40, 1.4981730485569084e+40, 1.4774821483781526e+40, 1.457146179035459e+40, 1.437158024750789e+40, 1.4175107321012688e+40, 1.39819750587792e+40, 1.3792117050610801e+40, 1.36054683890865e+40, 1.3421965631541238e+40, 1.3241546763105942e+40, 1.3064151160777834e+40, 1.288971955848902e+40, 1.2718194013142299e+40, 1.2549517871586054e+40, 1.238363573849868e+40, 1.222049344515624e+40, 1.2060038019055835e+40, 1.1902217654369907e+40, 1.174698168320632e+40, 1.1594280547649226e+40, 1.1444065772559912e+40, 1.129628993911203e+40, 1.1150906659042504e+40, 1.1007870549593966e+40, 1.0867137209131501e+40, 1.0728663193411083e+40, 1.0592405992482825e+40, 1.0458324008208855e+40, 1.0326376532379173e+40, 1.0196523725407343e+40, 1.0068726595589112e+40, 9.942946978908726e+39, 9.819147519376028e+39, 9.697291649879274e+39, 9.577343573539578e+39, 9.459268245551734e+39, 9.343031355498358e+39, 9.228599310122612e+39, 9.115939216548622e+39, 9.005018865934253e+39, 8.89580671754635e+39, 8.788271883244927e+39, 8.682384112365949e+39, 8.578113776990433e+39, 8.475431857590199e+39, 8.374309929038808e+39, 8.274720146977932e+39, 8.176635234529345e+39, 8.080028469342907e+39, 7.984873670970927e+39, 7.891145188560519e+39, 7.79881788885435e+39, 7.707867144492479e+39,7.618268822605982e+39, 7.529999273694525e+39, 7.443035320781082e+39, 7.357354248835054e+39, 7.272933794457165e+39, 7.189752135819221e+39, 7.10778788285108e+39, 7.027020067669003e+39, 6.947428135238444e+39, 6.868991934265098e+39, 6.791691708308168e+39, 6.715508087109804e+39, 6.640422078134903e+39, 6.566415058316209e+39, 6.49346876599834e+39, 6.421565293076227e+39, 6.350687077322922e+39, 6.280816894900883e+39, 6.211937853053132e+39, 6.144033382968434e+39, 6.077087232816912e+39, 6.011083460950876e+39, 5.946006429267404e+39, 5.88184079672727e+39, 5.81857151302764e+39, 5.75618381242319e+39, 5.69466320769302e+39, 5.633995484248535e+39, 5.57416669437943e+39, 5.515163151633982e+39, 5.456971425330305e+39, 5.3995783351948283e+39, 5.342970946125482e+39, 5.287136563075804e+39, 5.2320627260572417e+39, 5.177737205256422e+39, 5.1241479962647376e+39, 5.071283315417328e+39, 5.0191315952385715e+39]

#Gamma = 500
# energyOffList = [8e+51, 8.000011507149941e+51, 8.000011490666981e+51, 8.000011517284845e+51, 8.000011539176346e+51, 8.000011554728192e+51, 8.000011563953782e+51, 8.000011580532683e+51, 8.000011600003964e+51, 8.000011617244303e+51, 8.000011636194326e+51, 8.00001167120258e+51, 8.00001085535342e+51, 8.000010631736507e+51, 8.00001030772803e+51, 8.000009932584989e+51, 8.000009420233465e+51, 8.00000881769221e+51, 8.000008020108888e+51, 8.00000707459914e+51, 8.000005848698032e+51, 8.00001163008853e+51, 8.000002532817841e+51, 8.00000032007517e+51, 7.999997564389652e+51, 8.000011643055804e+51, 8.000011621049367e+51, 8.000011645651972e+51, 8.00001166445149e+51, 8.000011649199635e+51, 8.000011662968167e+51, 8.000011669628828e+51, 8.000011669072901e+51, 8.000011672373627e+51, 8.000011691952923e+51, 8.000011701508125e+51, 8.000011696207936e+51, 8.000011712371924e+51, 1.0975743032096362e+49, 9.903908237694243e+48, 8.947368661475581e+48, 8.086009163190312e+48, 7.322176117761905e+48, 6.638200544946172e+48, 6.024979617575294e+48, 5.474531682384937e+48, 3.0717407602893996e+49, 2.851548989168367e+49, 2.6490504846601454e+49, 2.4626714953121474e+49, 2.2909913025909763e+49, 2.1327260607830012e+49, 1.9867145428316197e+49, 1.8519056648591384e+49, 1.7273372010321413e+49, 1.6121643244753864e+49, 3.0421281736902684e+49, 1.644844867660177e+49, 7.136628684406615e+48, 2.916890585217988e+48, 1.2404829074233892e+48, 5.7357902100516664e+47, 2.9098713635688087e+47, 1.6061883425266785e+47, 9.510490030729116e+46, 5.957807814845241e+46, 3.904363057687255e+46, 2.653872985077015e+46, 1.859158100919452e+46, 1.3359563200336704e+46, 9.8113409083405e+45, 7.415280517588857e+45, 5.58824501037651e+45, 4.31598923499783e+45, 3.377726151800835e+45, 2.6750725148930722e+45, 2.1415339568202574e+45, 1.731295373242606e+45, 1.412237628137552e+45, 1.1614862936925114e+45, 9.625153513019893e+44, 8.032272216322955e+44, 6.7465821476856946e+44, 5.700919848886291e+44, 4.8444363555086716e+44, 4.138261423167216e+44, 3.5524134687366463e+44, 3.063571968754541e+44, 2.653454349174816e+44, 2.3076214467483355e+44, 2.0145900987413363e+44, 1.7651680596910922e+44, 1.5519513906356235e+44, 1.3689416450065014e+44, 1.2112521323745656e+44, 1.0748809482253471e+44, 9.56534425597519e+43, 8.534889389690438e+43, 7.634820789099673e+43, 6.846264652396182e+43, 6.153411173366892e+43, 5.542965209524512e+43, 5.003704398275508e+43, 4.526122017707244e+43, 4.1021370288366993e+43, 3.7248576378158755e+43, 3.3883876954525516e+43, 3.087667538518162e+43, 2.8183426427639725e+43, 2.576654827397026e+43, 2.359351818895594e+43, 2.1636118189130372e+43, 1.986980379691832e+43, 1.8273174111384712e+43, 1.682752557125941e+43, 1.5516475081640368e+43, 1.4325640813505068e+43, 1.3242371104340122e+43, 1.2255513597057618e+43, 1.1355218137278465e+43, 1.053276807206445e+43, 9.78043550816236e+42, 9.091356835738456e+42, 8.459425436843083e+42, 7.879199002235581e+42, 7.345819296250428e+42, 6.854942553567143e+42, 6.402678977252592e+42, 5.985540044918981e+42, 5.60039252788174e+42, 5.245312194601921e+42, 4.9158955634432646e+42, 4.6108323756615655e+42, 4.328054416255459e+42, 4.065691539682833e+42, 3.822050588307617e+42, 3.5955967754561614e+42, 3.384937219639352e+42, 3.1888063595138714e+42, 3.0060530158450274e+42, 2.835628898086612e+42, 2.6765783800393996e+42, 2.5280293920758634e+42, 2.389185297207895e+42, 2.2593176353090207e+42, 2.1377596344923047e+42, 2.023900401335534e+42, 1.917179712623503e+42, 1.8170833407930422e+42, 1.723138853524274e+42, 1.634911835102412e+42, 1.5520024834244407e+42, 1.474042541975886e+42, 1.4006925308614483e+42, 1.3316392451357475e+42, 1.2665934923231976e+42, 1.2052880442119646e+42, 1.1474757808117358e+42, 1.0929280068312408e+42, 1.0414329232021995e+42, 9.927942380897736e+41, 9.46829903517546e+41, 9.033709652267376e+41, 8.622605147089e+41, 8.233527335190793e+41, 7.865120210129716e+41, 7.516121975699729e+41, 7.185357761817247e+41, 6.8717329601145335e+41, 6.5742271217687115e+41, 6.291888365855168e+41, 6.023828251661689e+41, 5.769217072991551e+41, 5.527279536592473e+41, 5.297290790522868e+41, 5.078572771558618e+41, 4.870490843696596e+41, 4.672450702456011e+41, 4.4838955220613606e+41, 4.3043033247252365e+41, 4.1331845531757224e+41, 3.97007982930386e+41, 3.8145578833684115e+41, 3.666213639603263e+41, 3.524666445344705e+41, 3.389558431942635e+41, 3.2605529967605107e+41, 3.137333396506385e+41, 3.0196014429892364e+41, 2.907076293166412e+41, 2.7994933260455038e+41, 2.6966030996409223e+41, 2.5981703817600248e+41, 2.5039732489184992e+41, 2.413802248160821e+41, 2.3274596169952864e+41, 2.244758557048005e+41, 2.1655225574004563e+41, 2.089584763902876e+41, 2.0167873910556365e+41, 1.9469811733243275e+41, 1.880024853003699e+41, 1.8157847019746004e+41, 1.7541340749065717e+41, 1.6949529916504945e+41, 1.6381277467403066e+41, 1.5835505440842543e+41, 1.5311191550723709e+41, 1.4807365984628593e+41, 1.4323108405334403e+41, 1.3857545140981031e+41, 1.3409846550940655e+41, 1.297922455540118e+41, 1.2564930317562663e+41, 1.2166252068158564e+41, 1.1782513062765689e+41, 1.1413069663059278e+41, 1.10573095338067e+41, 1.0714649947981668e+41, 1.0384536192923781e+41, 1.0066440070971403e+41, 9.759858488455083e+40, 9.46431212737096e+40, 9.179344194446924e+40, 8.90451924268112e+40, 8.639422060770171e+40, 8.383656626160979e+40, 8.136845117746681e+40, 7.89862698449994e+40, 7.668658066584564e+40, 7.44660976571906e+40, 7.232168261779367e+40, 7.02503377282956e+40, 6.824919855951995e+40, 6.631552746422932e+40, 6.444670732938305e+40, 6.264023566742951e+40, 6.089371902655895e+40, 5.920486770113157e+40, 5.757149072467519e+40, 5.59914911289932e+40, 5.446286145393775e+40, 5.298367949338802e+40, 5.155210426387461e+40, 5.016637218312844e+40, 4.882479344662535e+40, 4.752574859093481e+40, 4.626768523335395e+40, 4.504911497796545e+40, 4.386861047884448e+40, 4.2724802651702946e+40, 4.161637802578309e+40, 4.054207622830162e+40, 3.9500687594203616e+40, 3.8491050894411708e+40, 3.751205117616094e+40, 3.6562617709381535e+40, 3.5641722033448015e+40, 3.474837609894048e+40, 3.3881630499371826e+40, 3.3040572788130035e+40, 3.222432587615096e+40, 3.1432046506095605e+40, 3.066292379904669e+40, 2.9916177869958724e+40, 2.9191058508316127e+40, 2.848684392064382e+40, 2.780283953170702e+40, 2.713837684140964e+40, 2.6492812334567534e+40, 2.5865526440885406e+40, 2.525592254261674e+40, 2.466342602751775e+40, 2.4087483384840175e+40, 2.352756134222811e+40, 2.2983146041497515e+40, 2.245374225138764e+40, 2.193887261547527e+40, 2.143807693353199e+40, 2.0950911474709023e+40, 2.0476948321005201e+40, 2.0015774739562115e+40, 1.9566992582406177e+40, 1.9130217712325847e+40, 1.870507945364267e+40,1.8291220066697532e+40, 1.7888294244935047e+40, 1.749596863352426e+40, 1.7113921368509778e+40, 1.674184163553765e+40, 1.6379429247247062e+40, 1.6026394238467597e+40, 1.5682456478401776e+40, 1.5347345299016531e+40, 1.5020799138901624e+40, 1.4702565201895016e+40, 1.4392399129804458e+40, 1.4090064688591384e+40, 1.379533346741226e+40, 1.3507984589941132e+40, 1.3227804437428708e+40, 1.2954586382974606e+40, 1.2688130536518086e+40, 1.2428243500076328e+40, 1.217473813277848e+40, 1.1927433325269888e+40, 1.1686153783076155e+40, 1.145072981854102e+40, 1.1220997150965548e+40, 1.0996796714596332e+40, 1.0777974474127464e+40, 1.0564381247393047e+40, 1.0355872534945809e+40, 1.0152308356229535e+40, 9.953553092066756e+39, 9.759475333195322e+39, 9.569947734601402e+39, 9.38484687540612e+39, 9.204053124073569e+39, 9.027450508722106e+39, 8.85492659232535e+39, 8.686372352603103e+39, 8.521682066409801e+39, 8.360753198434899e+39, 8.203486294042782e+39, 8.049784876080309e+39, 7.899555345494862e+39, 7.752706885607294e+39, 7.609151369893508e+39, 7.468803273134923e+39, 7.331579585802042e+39, 7.197399731544382e+39, 7.066185487662073e+39, 6.937860908442816e+39, 6.812352251250376e+39, 6.689587905257454e+39, 6.56949832271957e+39, 6.452015952690819e+39, 6.337075177086674e+39, 6.224612249003411e+39, 6.114565233207014e+39, 6.00687394870828e+39, 5.901479913343967e+39, 5.798326290288088e+39, 5.697357836419201e+39, 5.598520852474132e+39, 5.501763134919679e+39, 5.407033929478887e+39, 5.3142838862483015e+39, 5.223465016348304e+39, 5.1345306500476766e+39, 5.0474353963093625e+39, 4.962135103703108e+39, 4.878586822635862e+39, 4.796748768850627e+39, 4.7165802881474144e+39, 4.638041822281938e+39, 4.5610948759986716e+39, 4.4857019851571136e+39, 4.4118266859121364e+39, 4.339433484909694e+39, 4.2684878304616545e+39, 4.198956084664928e+39, 4.130805496430434e+39, 4.06400417539005e+39, 3.998521066650145e+39, 3.934325926361391e+39, 3.8713892980767525e+39, 3.8096824898690126e+39, 3.749177552181794e+39, 3.689847256388162e+39, 3.6316650740322486e+39, 3.574605156729777e+39, 3.518642316705138e+39, 3.463752007942706e+39, 3.409910307931153e+39, 3.35709389998064e+39, 3.305280056093039e+39, 3.2544466203662665e+39, 3.204571992914812e+39, 3.155635114288633e+39, 3.107615450373477e+39, 3.060492977756908e+39, 3.014248169543648e+39, 2.9688619816057236e+39, 2.924315839252413e+39, 2.880591624306423e+39, 2.8376716625723997e+39, 2.7955387116849805e+39, 2.754175949323799e+39, 2.7135669617831518e+39, 2.673695732885021e+39, 2.6345466332237778e+39, 2.5961044097320355e+39, 2.558354175557069e+39, 2.5212814002376335e+39, 2.4848719001714756e+39, 2.449111829364318e+39, 2.4139876704508957e+39, 2.3794862259796135e+39,2.345594609952155e+39, 2.3123002396100445e+39, 2.279590827460229e+39, 2.2474543735319667e+39, 2.2158791578579226e+39, 2.1848537331721297e+39, 2.1543669178182252e+39, 2.1244077888610855e+39, 2.0949656753957103e+39, 2.0660301520470594e+39, 2.0375910326549016e+39, 2.009638364137916e+39, 1.982162420531612e+39, 1.955153697194415e+39, 1.9286029051770788e+39, 1.9025009657499873e+39, 1.876839005084008e+39, 1.8516083490796567e+39, 1.8268005183404256e+39, 1.802407223285818e+39, 1.778420359399615e+39, 1.754832002609677e+39, 1.731634404794913e+39, 1.7088199894158288e+39, 1.6863813472648682e+39, 1.6643112323329788e+39, 1.642602557788881e+39, 1.6212483920676776e+39, 1.600241955065691e+39, 1.5795766144381345e+39, 1.5592458819968566e+39, 1.5392434102049004e+39, 1.5195629887653413e+39, 1.5001985413013636e+39, 1.4811441221251137e+39, 1.4623939130925828e+39, 1.443942220542101e+39, 1.425783472314031e+39, 1.4079122148491508e+39, 1.3903231103637168e+39, 1.3730109340987325e+39, 1.3559705716414452e+39, 1.3391970163169549e+39, 1.3226853666479002e+39, 1.306430823880386e+39, 1.290428689574017e+39, 1.2746743632546386e+39, 1.2591633401274848e+39, 1.2438912088494932e+39, 1.2288536493588134e+39, 1.2140464307600865e+39, 1.1994654092637433e+39, 1.1851065261780411e+39, 1.170965805952165e+39, 1.1570393542690526e+39, 1.1433233561865884e+39, 1.1298140743257832e+39, 1.1165078471046454e+39, 1.1034010870164957e+39, 1.0904902789514646e+39, 1.077771978560103e+39, 1.0652428106577923e+39, 1.0528994676689129e+39, 1.0407387081097498e+39, 1.0287573551089743e+39, 1.0169522949647377e+39, 1.0053204757374118e+39, 9.93858905876931e+38, 9.825646528838734e+38, 9.714348420033904e+38, 9.604666549510036e+38, 9.496573286695363e+38, 9.390041541162692e+38, 9.285044750795355e+38, 9.18155687024003e+38, 9.079552359638399e+38, 8.979006173630299e+38, 8.879893750621896e+38, 8.782191002310787e+38, 8.685874303462248e+38, 8.590920481929546e+38, 8.497306808912e+38, 8.405010989444774e+38, 8.314011153114422e+38, 8.224285844993611e+38, 8.135814016790604e+38, 8.048575018206437e+38, 7.962548588496303e+38, 7.877714848227703e+38, 7.794054291232242e+38, 7.711547776744912e+38, 7.63017652172679e+38, 7.549922093365743e+38, 7.470766401751379e+38, 7.392691692719329e+38, 7.31568054086084e+38, 7.239715842693071e+38, 7.164780809986683e+38, 7.090858963246314e+38, 7.017934125340112e+38]

#Gamma = 1000
# energyOffList = [8.000000000000001e+51, 4.702694260471595e+49, 4.1248493013294254e+49, 3.6261270269097823e+49, 3.1947495937528314e+49, 2.8204235070263957e+49, 2.4949800916185575e+49, 2.2113636085637154e+49, 1.9636455270638476e+49, 1.746813933068618e+49, 1.5566094742904592e+49, 1.389401862240844e+52, 1.2421898378427943e+52, 1.0195294034756648e+50, 9.67456516240285e+49, 9.186587597371841e+49, 8.728929480277087e+49, 8.299366043639073e+49, 7.895859811413151e+49, 7.516542889992328e+49, 7.159701108935326e+49, 6.823759802104453e+49, 6.507271042391066e+49, 6.208902169005684e+49, 5.927425463761021e+49, 5.661708851312877e+49, 5.410707511317681e+49, 5.173456305746426e+49, 4.949062934603871e+49, 4.736701742346897e+49, 4.535608109284785e+49, 4.3450733653594416e+49, 4.164440174410365e+49, 3.9930983410931816e+49, 3.8304809974823365e+49, 3.676061132138242e+49, 3.529348428219451e+49, 3.3898863795608697e+49, 3.2572496589221223e+49, 3.131035681901968e+49, 3.010886083287784e+49, 2.896449852610872e+49, 2.7874043000392397e+49, 2.683447769067633e+49, 2.584298087075431e+49, 2.4896911431183337e+49, 2.39937958095617e+49, 2.3131315974305689e+49, 2.2307298366660597e+49, 2.1519703717100026e+49, 2.076661766167489e+49, 2.0046242087166656e+49, 1.9356887144718785e+49, 1.8696963873423513e+49, 1.806497738451771e+49, 1.7459520557722578e+49, 6.987960273438458e+48, 3.72121676654452e+48, 1.580439009196587e+48, 6.314563275217242e+47, 2.6259934574380466e+47, 1.1884417767478505e+47, 5.910058453247744e+46, 3.2042304949517305e+46, 1.867738449361159e+46, 1.15434481614561e+46, 7.478015253835133e+45, 5.0330814863535335e+45, 3.496256142870366e+45, 2.4941791677678462e+45, 1.8203040800769802e+45, 1.3550192282787735e+45, 1.0263189668759463e+45, 7.893951670194093e+44, 6.155530111691148e+44, 4.859491540319358e+44, 3.879312875533544e+44, 3.128335388921067e+44, 2.5461323182888132e+44, 2.08987885059346e+44, 1.7287723131260878e+44, 1.4403548513583181e+44, 1.2080473020591558e+44, 1.0194686897368777e+44, 8.652740974562152e+43, 7.383400046459173e+43, 6.331859497711034e+43, 5.45559113598642e+43, 4.721326410792977e+43, 4.102843051315965e+43, 3.579325491999481e+43, 3.1341393352753343e+43, 2.753907487821297e+43, 2.4278081163014563e+43, 2.1470371169644243e+43, 1.9043935950985253e+43, 1.6939580323556755e+43, 1.510840806188198e+43, 1.3509844794956763e+43, 1.2110074585712922e+43, 1.0880796780871868e+43, 9.798232297719875e+42, 8.842325290845144e+42, 7.996098692162302e+42, 7.245131567498585e+42, 6.577133392873066e+42, 5.981595810692394e+42, 5.4495066091317515e+42, 4.9731138919450985e+42, 4.545730903819012e+42, 4.161573921412667e+42, 3.815627142134309e+42, 3.503529699062362e+42, 3.221480875099851e+42, 2.966160338608051e+42, 2.734660819347254e+42, 2.5244311205370426e+42, 2.3332277456889008e+42, 2.1590737272914724e+42, 2.000223493805042e+42, 1.8551328137579273e+42, 1.7224330204601403e+42, 1.6009088553911e+42, 1.489479378556058e+42, 1.387181484708001e+42, 1.293155639015981e+42, 1.2066335075033348e+42, 1.1269272087639996e+42, 1.0534199560136212e+42, 9.855578939946635e+41, 9.230005317075201e+41, 8.649705613763829e+41, 8.112361336806769e+41, 7.614319260808888e+41, 7.152276581739058e+41, 6.723243554631609e+41, 6.324510507506502e+41, 5.953618673823995e+41,5.608334362489484e+41, 5.286626049818857e+41, 4.986644033733677e+41, 4.70670233827047e+41, 4.445262597483293e+41, 4.200919683039411e+41, 3.9723888701165896e+41, 3.7584943623380615e+41, 3.558159019046209e+41, 3.370395147730244e+41, 3.1942962413340152e+41, 3.0290295548403525e+41, 2.873829428281979e+41, 2.7279912744274466e+41, 2.590866159066132e+41, 2.461855910262052e+41, 2.3404087003317297e+41, 2.2260150507633173e+41, 2.1182042159623577e+41, 2.0165409066826404e+41, 1.9206223183730092e+41, 1.830075433517946e+41, 1.744554570440899e+41, 1.6637391540295271e+41, 1.5873316864845925e+41, 1.5150558985312148e+41, 1.4466550635988334e+41, 1.3818904593116312e+41, 1.3205399622566253e+41, 1.2623967634439236e+41, 1.2072681931579082e+41, 1.1549746450435751e+41, 1.1053485902915393e+41, 1.0582336736955973e+41, 1.0134838841689896e+41, 9.709627930319046e+40, 9.30542854032513e+40, 8.921047596457895e+40, 8.5553684871624545e+40, 8.207345609783142e+40, 7.875999344089978e+40, 7.560411417447091e+40, 7.25972062834498e+40, 6.973118898076615e+40, 6.69984762309557e+40, 6.439194303081598e+40, 6.190489421985407e+40, 5.953103561348678e+40, 5.726444727034078e+40, 5.509955872154331e+40, 5.303112600493639e+40, 5.105421036076449e+40, 4.916415845769959e+40, 4.735658402930664e+40, 4.562735081119051e+40, 4.397255667833036e+40, 4.2388518890503376e+40, 4.0871760361355144e+40, 3.941899687363631e+40, 3.8027125169481655e+40, 3.6693211850385974e+40, 3.5414483026820985e+40, 3.418831466226009e+40, 3.301222356077999e+40, 3.1883858951440593e+40, 3.080099462632666e+40, 2.976152159251148e+40, 2.8763441201282553e+40, 2.7804858720814544e+40, 2.688397732105525e+40, 2.599909244198134e+40, 2.5148586518562217e+40, 2.4330924037781e+40, 2.3544646904902484e+40, 2.2788370097877585e+40, 2.2060777590334677e+40, 2.136061852504264e+40, 2.068670362105423e+40, 2.003790179895875e+40, 1.9413137009794978e+40, 1.881138525421277e+40, 1.8231671779427846e+40, 1.7673068442398345e+40, 1.7134691228466237e+40, 1.6615697915459698e+40, 1.6115285873954257e+40, 1.5632689995028783e+40, 1.516718073745249e+40, 1.4718062286794113e+40, 1.4284670819448942e+40, 1.386637286506162e+40, 1.346256376125605e+40, 1.3072666194996047e+40, 1.269612882527389e+40, 1.2332424982181615e+40, 1.1981051437738438e+40, 1.1641527244157716e+40, 1.1313392635514118e+40, 1.0996207989034708e+40, 1.068955284248164e+40, 1.0393024964322039e+40, 1.010623947358763e+40, 9.828828006528429e+39, 9.56043792734385e+39, 9.300731580447398e+39, 9.049385581879539e+39, 8.806090147631755e+39, 8.570548456782622e+39, 8.342476047478632e+39, 8.121600243908187e+39, 7.907659612535668e+39, 7.700403445963534e+39, 7.499591272890607e+39, 7.304992392726544e+39, 7.116385433508441e+39, 6.933557931846198e+39, 6.756305933698692e+39, 6.584433614852762e+39, 6.417752920044345e+39, 6.256083219721871e+39, 6.099250983510615e+39, 5.947089469491284e+39, 5.799438428456517e+39, 5.656143822357635e+39, 5.517057556198037e+39, 5.382037222673013e+39, 5.2509458588934004e+39, 5.1236517145702417e+39, 5.0000280310700556e+39, 4.879952830785004e+39, 4.763308716291806e+39, 4.649982678803227e+39, 4.5398659154426174e+39, 4.43285365489811e+39, 4.328844991036748e+39, 4.227742724082e+39, 4.12945320897951e+39, 4.033886210595611e+39, 3.940954765412848e+39, 3.8505750494044044e+39, 3.7626662517854214e+39, 3.6771504543567016e+39, 3.593952516170035e+39, 3.512999963258743e+39, 3.434222883190925e+39, 3.357553824215074e+39, 3.2829276987796725e+39, 3.2102816912196606e+39, 3.139555169413551e+39, 3.0706896002244376e+39, 3.003628468548317e+39, 2.9383171998014876e+39, 2.874703085687481e+39, 2.812735213092423e+39, 2.752364395964484e+39, 2.6935431100409896e+39, 2.6362254302929898e+39, 2.5803669709641437e+39, 2.5259248280860032e+39, 2.4728575243584694e+39, 2.4211249562889745e+39,2.3706883434892155e+39, 2.3215101800337314e+39, 2.273554187788307e+39, 2.2267852716213444e+39, 2.181169476415439e+39, 2.1366739457997082e+39, 2.093266882528202e+39, 2.050917510432255e+39, 2.0095960378788847e+39, 1.969273622669889e+39, 1.9299223383197348e+39, 1.891515141653227e+39, 1.854025841666313e+39, 1.817429069596447e+39, 1.7817002501511405e+39, 1.74681557384589e+39, 1.712751970404527e+39, 1.67948708317776e+39, 1.6469992445370695e+39, 1.615267452203504e+39, 1.584271346472634e+39, 1.5539911882984796e+39, 1.5244078382011014e+39,1.4955027359641948e+39, 1.4672578810900155e+39, 1.4396558139813418e+39, 1.4126795978203205e+39, 1.386312801116572e+39, 1.3605394808971738e+39, 1.3353441665129512e+39, 1.3107118440363688e+39, 1.286627941227313e+39, 1.2630783130443927e+39, 1.2400492276799431e+39, 1.2175273530982056e+39, 1.1954997440568302e+39, 1.1739538295927004e+39, 1.1528774009540767e+39,1.1322585999615534e+39, 1.1120859077812236e+39, 1.0923481340941383e+39, 1.0730344066467592e+39, 1.0541341611678076e+39, 1.0356371316373543e+39, 1.0175333408949253e+39, 9.998130915735188e+38, 9.824669573473286e+38, 9.654857744811938e+38, 9.48860633670579e+38, 9.325828721609554e+38, 9.166440661364088e+38, 9.010360233671206e+38, 8.857507761064213e+38, 8.707805742278785e+38, 8.561178785937825e+38, 8.417553546463846e+38, 8.276858662137122e+38, 8.139024695222359e+38, 8.00398407408691e+38, 7.871671037238974e+38, 7.742021579216325e+38, 7.61497339825853e+38, 7.490465845697942e+38, 7.368439877009138e+38, 7.248838004455816e+38, 7.131604251279536e+38, 7.016684107374818e+38, 6.90402448639756e+38, 6.793573684257636e+38,6.685281338944846e+38, 6.579098391643039e+38, 6.4749770490864996e+38, 6.372870747115799e+38, 6.272734115390379e+38, 6.174522943218992e+38, 6.078194146468548e+38, 5.983705735514205e+38, 5.891016784195331e+38, 5.8000873997424684e+38, 5.710878693642143e+38, 5.6233527534079186e+38, 5.537472615226541e+38, 5.453202237449407e+38, 5.370506474901623e+38, 5.289351053979914e+38, 5.2097025485141414e+38, 5.131528356365707e+38, 5.0547966767392135e+38, 4.979476488183095e+38, 4.905537527256406e+38, 4.832950267840094e+38, 4.7616859010707896e+38, 4.691716315877538e+38, 4.623014080100828e+38, 4.5555524221754075e+38, 4.4893052133584725e+38, 4.424246950485149e+38, 4.360352739234398e+38, 4.297598277889077e+38, 4.235959841573648e+38, 4.175414266954684e+38, 4.1159389373890065e+38, 4.057511768505339e+38, 4.00011119420569e+38, 3.943716153072701e+38, 3.888306075170717e+38, 3.833860869227531e+38, 3.7803609101852945e+38, 3.7277870271085866e+38, 3.6761204914386285e+38, 3.625343005582884e+38, 3.575436691829416e+38, 3.526384081575818e+38, 3.478168104863532e+38, 3.430772080207146e+38, 3.384179704710604e+38, 3.3383750444605224e+38, 3.2933425251890078e+38, 3.2490669231970094e+38, 3.205533356530635e+38, 3.1627272764027054e+38, 3.120634458851819e+38, 3.079240996632237e+38, 3.0385332913270406e+38, 2.9984980456782682e+38, 2.9591222561272958e+38, 2.9203932055592762e+38, 2.882298456245412e+38, 2.8448258429772164e+38, 2.8079634663871938e+38, 2.7716996864501143e+38, 2.7360231161598826e+38, 2.7009226153764262e+38, 2.66638728483806e+38, 2.6324064603340406e+38, 2.598969707032909e+38, 2.5660668139618982e+38, 2.533687788633157e+38, 2.5018228518123764e+38, 2.4704624324257172e+38, 2.4395971626011953e+38, 2.409217872840484e+38, 2.3793155873173316e+38, 2.349881519299195e+38, 2.3209070666883345e+38, 2.2923838076791424e+38, 2.2643034965280854e+38, 2.2366580594336296e+38, 2.209439590522304e+38, 2.1826403479385472e+38, 2.156252750034989e+38, 2.130269371660603e+38, 2.104682940543722e+38, 2.0794863337676015e+38, 2.0546725743356003e+38, 2.030234827823722e+38, 2.0061663991179547e+38, 1.982460729234171e+38, 1.959111392218184e+38, 1.9361120921238664e+38, 1.913456660066999e+38, 1.8911390513531187e+38, 1.8691533426769137e+38, 1.8474937293914723e+38, 1.8261545228454726e+38, 1.805130147786361e+38, 1.7844151398277986e+38, 1.7640041429796464e+38, 1.743891907238741e+38, 1.724073286238833e+38, 1.704543234958225e+38, 1.6852968074833388e+38, 1.6663291548269235e+38, 1.6476355227993062e+38, 1.629211249931366e+38, 1.6110517654477894e+38, 1.5931525872893368e+38, 1.5755093201827015e+38, 1.5581176537569622e+38, 1.5409733607050464e+38, 1.5240722949893566e+38, 1.5074103900901837e+38, 1.490983657295864e+38, 1.4747881840336231e+38, 1.4588201322400414e+38, 1.4430757367699709e+38, 1.4275513038431708e+38, 1.412243209527407e+38, 1.3971478982573436e+38, 1.3822618813880386e+38, 1.3675817357823718e+38, 1.3531041024314283e+38, 1.338825685107032e+38, 1.3247432490455573e+38, 1.310853619662303e+38, 1.2971536812956e+38, 1.283640375979929e+38, 1.2703107022472487e+38, 1.257161713955922e+38, 1.2441905191464913e+38, 1.2313942789236077e+38]
'''------STRUCTURED JET SIMULATION DATA------'''
'''------IMPORTS-------'''
import numpy as np
import math
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import random
import pylab
from NumericalIntegrationEnergy import offAxisEnergy
'''------IMPORTS-------'''
def printProgressBar (iteration, total, prefix = '', suffix = '', decimals = 1, length = 100, fill = '█'):
    """ Makes progress Bar """  
    #https://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console
    """
    Call in a loop to create terminal progress bar
    @params:
        iteration   - Required  : current iteration (Int)
        total       - Required  : total iterations (Int)
        prefix      - Optional  : prefix string (Str)
        suffix      - Optional  : suffix string (Str)
        decimals    - Optional  : positive number of decimals in percent complete (Int)
        length      - Optional  : character length of bar (Int)
        fill        - Optional  : bar fill character (Str)
    """
    percent = ("{0:." + str(decimals) + "f}").format(100 * (iteration / float(total)))
    filledLength = int(length * iteration // total)
    bar = fill * filledLength + '-' * (length - filledLength)
    print('\r%s |%s| %s%% %s' % (prefix, bar, percent, suffix), end = '\r')
    # Print New Line on Complete
    if iteration == total: 
        print()

'''------FUNCTION------'''
def AP_PLUS(eta,a,b,psi):
    ret = math.sin(eta) * ((a * math.cos(2 * psi)) + (b * math.sin(2 * psi)))
    return ret
    
def AP_CROSS(eta,a,b,psi):
    ret = math.sin(eta) * ((b * math.cos(2 * psi)) - (a * math.sin(2 * psi)))
    return ret

def afunction(chi, beta, theta, phi, lambd):
    ret = ((1/16) * math.sin(2 * chi) * (3 - math.cos(2 * beta)) * (3 - math.cos(2 * theta))
    * math.cos(2 * (phi + lambd)))
    
    + ((1/4) * math.cos(2 * chi) * math.sin(beta) * (3 - math.cos(2 * theta))
    * math.sin(2 * (phi + lambd)))
    
    + ((1/4) * math.sin(2 * chi) * math.sin(2 * beta) * math.sin(2 * theta) * math.cos(phi + lambd))
    
    + ((1/2) * math.cos(2 * chi) * math.cos(beta) * math.sin(2 * theta) * math.sin(phi + lambd))
    
    + ((3/4) * math.sin(2 * chi) * (math.cos(beta) ** 2) * (math.sin(theta) ** 2))
    return ret
    
def bfunction(chi, beta, theta, phi, lambd):
    ret = (math.cos(2 * chi) * math.sin(beta) * math.cos(theta) * math.cos(2 * (phi + lambd)))
    
    - ((1/4) * math.sin(2 * chi) * (3 - math.cos(2 * beta)) * math.cos(theta) * math.sin(2 * (phi * lambd)))
    
    + (math.cos(2 * chi) * math.cos(beta) * math.sin(theta) * math.cos(phi + lambd))
    
    - ((1/2) * math.sin(2 * chi) * math.sin(2 * beta) * math.sin(theta) * math.sin(phi + lambd))
    return ret

def COMPASS_TO_ANGLE(compassdirection):
    ret = ((5 * math.pi) / 2) - compassdirection
    return ret
    
def DMS_TO_DEGREES(degs, mins, secs):
    ret = degs + (mins/60) + (secs/3600)
    return ret

def standarddev (x, mu, N):
    summ = 0
    for deff in range(0, N):
        adder = (x[deff] - mu) ** 2
        summ = summ + adder
    ret = math.sqrt(summ/(N-1))
    return ret

def angletoenergy(theta, energyorig, thetac, alpha):
    ret =   energyorig * math.e ** (-1 * ((theta/thetac) ** alpha))
    return ret
    
def delta_function(beta, thetaObs, thetaj):
    ret = 1 - beta * math.cos(thetaObs - thetaj)
    return ret
'''------FUNCTION------'''
'''------CREATE POINTS------'''
for i in [0]:
    if i == 0:
        energyInitial = 8e51
    elif i == 1:
        energyInitial = 1e51
    elif i == 2 :
        energyInitial = 1e50

    poss_differencediv = energyStrucList[0] / energyInitial

    for strucIterator in range(0,len(energyStrucList)):
        energyStrucList[strucIterator] /= poss_differencediv

    # possDifferenceOff = energyOffList[0] / energyInitial

    # for offIterator in range(0,len(energyStrucList)):
    #     energyOffList[offIterator] /= possDifferenceOff

    for x in [0,1,3,7]:
        #stage = input('Enter what stage (design, late low, late mid, late high, mid low, mid mid, mid high, 3rd generation) ')
        #stage = 'design
        #stage = 'design'
        if x == 0: #since we have different sensitivities we need different Dvs
            stage  = 'design'
        elif x == 1:
            stage = 'late low'
        elif x == 2:
            stage = 'late mid'
        elif x == 3:
            stage = 'late high'
        elif x == 4:
            stage = 'mid low'
        elif x == 5:
            stage = 'mid mid'
        elif x == 6:
            stage = 'mid high'
        elif x == 7:
            stage = '3rd generation'

        if stage == 'design':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 190,190,170
        elif stage == 'mid low':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 80, 80, 65
        elif stage == 'mid mid':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 100, 100, 75
        elif stage == 'mid high':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 120, 120, 85    
        elif stage == 'late low':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 120, 120, 65
        elif stage == 'late mid':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 145, 145, 90
        elif stage == 'late high':
            Dv_LOUIS, Dv_WASH, Dv_VIRGO = 170, 170, 115
        elif stage == '3rd generation':
            Dv_WASH = 190 * 10
            Dv_LOUIS, Dv_VIRGO = 1, 1
            
        trials = 100 # input("Enter the number of points you want to test: ") + 1
        iterations = 1000
        GRBFINALnum_off, GWGRBFINALnum_off, GRBFINALnum_struc_best, GWGRBFINALnum_struc_best, GRBFINALnum_struc_sim, GWGRBFINALnum_struc_sim = 0, 0, 0, 0, 0, 0
        GWPERCENTMEAN, GWFINALnum = [], 0
        GRBPERCENTMEAN_off, GWGRBPERCENTMEAN_off, GRBPERCENTMEAN_struc_best, GWGRBPERCENTMEAN_struc_best, GRBPERCENTMEAN_struc_sim, GWGRBPERCENTMEAN_struc_sim = [], [], [], [], [], []
        GBMtheta, GBMphi, SWIFTtheta, SWIFTphi = [], [], [], []

        maxDistance = 450.0 #Max distance of generation in Mpc
        minDistance = 0 #Min distance of generation in Mpc

        for q in range(0,iterations):

            printProgressBar(q, iterations)

            RHO_PLUS_LOUIS, RHO_CROSS_LOUIS, RHO_PLUS_WASH, RHO_CROSS_WASH, RHO_PLUS_VIRGO, RHO_CROSS_VIRGO = [], [], [], [], [], []
            a_AP_LOUIS, a_AP_WASH, a_AP_VIRGO, b_AP_LOUIS, b_AP_WASH, b_AP_VIRGO = [], [], [], [], [], []
            h_LOUIS, h_WASH, h_VIRGO, reach = [], [], [], []
            phi, theta, distance, rotationpercent, rotationangle, thetaObs, psi = [], [], [], [], [], [], []
            antenna_power = []
            GRBTESTnum_off, GRBTESTnum_struc_best, GRBTESTnum_struc_sim = 0, 0, 0
            GWTESTnum = 0

            #Phi and Theta uniformly distributed 
            for z in range(0,trials): # binary neutron star merger creation

                distance.append(random.uniform(minDistance,maxDistance))
                h_LOUIS.append(((((Dv_LOUIS * 12)**2))/(((distance[z]) ** 2)))) #*2.25 to account for average over polarization
                h_WASH.append(((((Dv_WASH * 12)**2))/((distance[z]) ** 2)))
                h_VIRGO.append(((((Dv_VIRGO * 12)**2))/((distance[z]) ** 2)))
                
                psi.append(random.uniform(0,math.pi * 2))
                phi.append(random.uniform(0, 2 * math.pi))
                theta.append(random.uniform(0, math.pi))

                GBMtheta.append(random.uniform(1.9823131728623847, math.pi))     #creating random continuous region of space for GRB detections
                GBMphi.append(((14 * math.pi)/5) / (-math.cos(GBMtheta[z]) + 1))

                SWIFTtheta.append(random.uniform(0.7953988301841436, math.pi))
                SWIFTphi.append(((3 * math.pi)/5)/ (-math.cos(SWIFTtheta[z]) + 1))

                thetaObs.append(random.uniform(0,math.pi/2)) #GRB Observation angle and inclination angle

                #To match with the dictionary

            '''------CREATE POINTS-------'''
            '''------GW DETECTORS------''' #chi is orientation from East in degrees
            #input different detector locations and orientations, beta and lambda are lattitude and longitude
            eta_AP = math.pi/2
            
            #Livingston Louisiana LIGO
            beta_LOUIS = math.radians(DMS_TO_DEGREES(30,33,46.4))
            lambd_LOUIS = math.radians(DMS_TO_DEGREES(90,46,27.3))
            chi_LOUIS = COMPASS_TO_ANGLE(math.radians(208))
            
            #Hanford Washington LIGO
            beta_WASH = math.radians(DMS_TO_DEGREES(46,27,18.5))
            lambd_WASH = math.radians(DMS_TO_DEGREES(119,24,27.6))
            chi_WASH = COMPASS_TO_ANGLE(math.radians(279))
            
            #VIRGO
            beta_VIRGO = math.radians(DMS_TO_DEGREES(43,37,53))
            lambd_VIRGO = math.radians(DMS_TO_DEGREES(10,30,16))
            chi_VIRGO = COMPASS_TO_ANGLE(math.radians(333.5))
            '''------GW DETECTORS------'''     
            '''------ANTENNA PATTERNS-------'''
            for d in range(0,trials):
                    #print(afunction(chi_LOUIS, beta_LOUIS, theta[d], phi[d], lambd_LOUIS))
                    a_AP_LOUIS.append(afunction(chi_LOUIS, beta_LOUIS, theta[d], phi[d], lambd_LOUIS))
                    a_AP_WASH.append(afunction(chi_WASH, beta_WASH, theta[d], phi[d], lambd_WASH))
                    a_AP_VIRGO.append(afunction(chi_VIRGO, beta_VIRGO, theta[d], phi[d], lambd_VIRGO))
                    
                    b_AP_LOUIS.append(bfunction(chi_LOUIS, beta_LOUIS, theta[d], phi[d], lambd_LOUIS))
                    b_AP_WASH.append(bfunction(chi_WASH, beta_WASH, theta[d], phi[d], lambd_WASH))
                    b_AP_VIRGO.append(bfunction(chi_VIRGO, beta_VIRGO, theta[d], phi[d], lambd_VIRGO))
                    
                    RHO_PLUS_LOUIS.append(AP_PLUS(eta_AP, a_AP_LOUIS[d], b_AP_LOUIS[d], psi[d]))
                    RHO_PLUS_WASH.append(AP_PLUS(eta_AP, a_AP_WASH[d], b_AP_WASH[d], psi[d]))
                    RHO_PLUS_VIRGO.append(AP_PLUS(eta_AP, a_AP_VIRGO[d], b_AP_VIRGO[d], psi[d]))
                    
                    RHO_CROSS_LOUIS.append(AP_CROSS(eta_AP, a_AP_LOUIS[d], b_AP_LOUIS[d], psi[d]))
                    RHO_CROSS_WASH.append(AP_CROSS(eta_AP, a_AP_WASH[d], b_AP_WASH[d], psi[d]))
                    RHO_CROSS_VIRGO.append(AP_CROSS(eta_AP, a_AP_VIRGO[d], b_AP_VIRGO[d], psi[d]))
            '''------ANTENNA PATTERNS------'''
            '''------SNR CALCULATOR/CHECKER------'''
            SNRcalculatedLOUISsig, SNRcalculatedWASHsig, SNRcalculatedVIRGOsig, SNRcalculated, GWTEST = [], [], [], [], []
            SNRnum = 0
            for f in range(0, trials):  
                #change to signal averaging
                if stage != '3rd generation':
                    inclinationMultiplier = (1/8) * (1 + (6 * (math.cos(thetaObs[f]) ** 2)) + (math.cos(thetaObs[f]) ** 4)) #Schutz eq 26

                    SNRcalculatedLOUISsig.append(math.sqrt(inclinationMultiplier * ((RHO_PLUS_LOUIS[f]**2) + (RHO_CROSS_LOUIS[f] ** 2)) * h_LOUIS[f]))
                    SNRcalculatedWASHsig.append(math.sqrt(inclinationMultiplier * ((RHO_PLUS_WASH[f] ** 2) + (RHO_CROSS_WASH[f] ** 2)) * h_WASH[f]))
                    SNRcalculatedVIRGOsig.append(math.sqrt(inclinationMultiplier * ((RHO_PLUS_VIRGO[f] ** 2) + (RHO_CROSS_VIRGO[f] ** 2)) * h_VIRGO[f]))


                    SNRcalculated.append(math.sqrt((SNRcalculatedLOUISsig[f] ** 2)+ (SNRcalculatedWASHsig[f] ** 2) + (SNRcalculatedVIRGOsig[f]**2)))
                    
                else:
                    SNRcalculated.append(math.sqrt(((RHO_PLUS_WASH[f] ** 2) + (RHO_CROSS_WASH[f] ** 2)) * h_WASH[f])) #Only 1 3rd generation
                    
                if SNRcalculated[f] >= 12: #network sensitivity in a network of 3 detectors is 12 SNR
                    GWTEST.append(True)
                    GWTESTnum += 1  
                else:
                    GWTEST.append(False)
            '''------SNR CALCULATOR/CHECKER------'''
            '''------OFF AXIS------'''
            fluence_off, GRBTEST_off = [], []
            gamma = 300
            thetaj = 10
            beta = math.sqrt((-1 * ((1/gamma) ** 2)) + 1)
            realOffThetaList, realOffEnergyList = [], []


            #Finds correct theta values based on GRB profile
            for a in range(0, len(thetaObs)):
                realOffThetaList.append(min(thetaOffList, key=lambda x:abs(x-thetaObs[a])))
                index = min(range(len(thetaOffList)), key=lambda z: abs(thetaOffList[z]-thetaObs[a]))
                realOffEnergyList.append(energyOffList[index])

            for a in range(0,trials):
                fluence_off.append(realOffEnergyList[a]/ (4 * math.pi * ((distance[a] * 3.086e24)**2))) # Calls the energy function from class then divides by 4 pi r squared to get fluence

                if fluence_off[a] > 2.5e-8 and theta[a] < GBMtheta[a] and phi[a] < GBMphi[a]:
                    GRBTEST_off.append(True)
                    GRBTESTnum_off += 1

                elif fluence_off[a] > 2.5e-8 and theta[a] < SWIFTtheta[a] and phi[a] < SWIFTphi[a]:
                    GRBTEST_off.append(True)
                    GRBTESTnum_off += 1

                else:
                    GRBTEST_off.append(False)

                    
            '''------OFF AXIS------'''
            '''------STRUCTURED JET SIMULATION------'''
            real_theta_list, real_energy_list, fluence_struc_sim, GRBTEST_struc_sim = [], [], [], []
            thetaj = 10
            alpha = 1.9
            thetac = 9
            testNum = 0

            for a in range(0, len(thetaObs)):
                if thetaObs[a] <= math.radians(38.49856821):
                    real_theta_list.append(min(thetaStrucList, key=lambda x:abs(x-thetaObs[a])))
                    index = min(range(len(thetaStrucList)), key=lambda z: abs(thetaStrucList[z]-thetaObs[a]))
                    real_energy_list.append(energyStrucList[index])
                else:
                    real_energy_list.append(0)
            
            for p in range(0,trials):
                fluence_struc_sim.append(real_energy_list[p]/(4 * math.pi * ((distance[p] * 3.086e24) ** 2)))
                
                if fluence_struc_sim[p] > 2.5e-8 and theta[p] < GBMtheta[p] and phi[p] < GBMphi[p]:
                    GRBTEST_struc_sim.append(True)
                    GRBTESTnum_struc_sim += 1
                elif fluence_struc_sim[p] > 2.5e-8 and theta[p] < SWIFTtheta[p] and phi[p] < SWIFTphi[p]:
                    GRBTEST_struc_sim.append(True)
                    GRBTESTnum_struc_sim += 1
                else:
                    GRBTEST_struc_sim.append(False) 

            '''------STRUCTURED JETS SIMULATION------'''  
            '''------STRUCTURED JET BEST FIT------'''
            fluence_struc_best, GRBTEST_struc_best, energy_struc_best = [], [], []
            thetaj = 10
            alpha = 1.9
            thetac = 9
            thetaj = 10
            for a in range(0,trials):
                if thetaObs[a] < 38.49856821:
                    energy_struc_best.append(angletoenergy(thetaObs[a], energyInitial
                    , math.radians(thetac), alpha))
                else:
                    energy_struc_best.append(0)

                fluence_struc_best.append(energy_struc_best[a]/(4 * math.pi * ((distance[a] * 3.086e24) ** 2)))
                
                if fluence_struc_best[a] > 2.5e-8 and theta[a] < GBMtheta[a] and phi[a] < GBMphi[a]:
                    GRBTEST_struc_best.append(True)
                    GRBTESTnum_struc_best += 1
                elif fluence_struc_best[a] > 2.5e-8 and theta[a] < SWIFTtheta[a] and phi[a] < SWIFTphi[a]:
                    GRBTEST_struc_best.append(True)
                    GRBTESTnum_struc_best += 1
                else:
                    GRBTEST_struc_best.append(False)    
            '''------STRUCTURED JET BEST FIT------'''
            '''------CROSS CHECK------'''
            GWGRBTESTnum_off, GWGRBTESTnum_struc_sim, GWGRBTESTnum_struc_best, = 0, 0, 0
            for g in range(0,trials):
                if GWTEST[g] == True and GRBTEST_off[g] == True:
                    GWGRBTESTnum_off += 1
                if GWTEST[g] == True and GRBTEST_struc_sim[g] == True:
                    GWGRBTESTnum_struc_sim += 1
                if GWTEST[g] == True and GRBTEST_struc_best[g] == True:
                    GWGRBTESTnum_struc_best += 1
            '''------CROSS CHECK------'''
            '''------MEAN AND SD AND GRAPH------'''
            GWFINALnum = GWFINALnum + GWTESTnum
            GWPERCENTMEAN.append(GWTESTnum/trials)
            
            GRBFINALnum_off = GRBFINALnum_off + GRBTESTnum_off
            GWGRBFINALnum_off = GWGRBFINALnum_off + GWGRBTESTnum_off
            GRBPERCENTMEAN_off.append(GRBTESTnum_off/trials)
            GWGRBPERCENTMEAN_off.append(GWGRBTESTnum_off/trials)
            
            GRBFINALnum_struc_sim = GRBFINALnum_struc_sim + GRBTESTnum_struc_sim
            GWGRBFINALnum_struc_sim = GWGRBFINALnum_struc_sim + GWGRBTESTnum_struc_sim
            GRBPERCENTMEAN_struc_sim.append(GRBTESTnum_struc_sim/trials)
            GWGRBPERCENTMEAN_struc_sim.append(GWGRBTESTnum_struc_sim/trials)
            
            GRBFINALnum_struc_best = GRBFINALnum_struc_best + GRBTESTnum_struc_best
            GWGRBFINALnum_struc_best = GWGRBFINALnum_struc_best + GWGRBTESTnum_struc_best
            GRBPERCENTMEAN_struc_best.append(GRBTESTnum_struc_best/trials)
            GWGRBPERCENTMEAN_struc_best.append(GWGRBTESTnum_struc_best/trials)
            
        GWPERCENT = GWFINALnum / (iterations * trials)
        GWSD = standarddev(GWPERCENTMEAN, GWPERCENT, iterations)

        GRBPERCENT_off = GRBFINALnum_off/ (iterations * trials)
        GWGRBPERCENT_off = GWGRBFINALnum_off/ (iterations * trials)
        GRBSD_off = standarddev(GRBPERCENTMEAN_off, GRBPERCENT_off, iterations)
        GWGRBSD_off = standarddev(GWGRBPERCENTMEAN_off, GWGRBPERCENT_off, iterations)

        GRBPERCENT_struc_sim = GRBFINALnum_struc_sim/ (iterations * trials)
        GWGRBPERCENT_struc_sim = GWGRBFINALnum_struc_sim/ (iterations * trials)
        GRBSD_struc_sim = standarddev(GRBPERCENTMEAN_struc_sim, GRBPERCENT_struc_sim, iterations)
        GWGRBSD_struc_sim = standarddev(GWGRBPERCENTMEAN_struc_sim, GWGRBPERCENT_struc_sim, iterations)

        GRBPERCENT_struc_best = GRBFINALnum_struc_best/ (iterations * trials)
        GWGRBPERCENT_struc_best = GWGRBFINALnum_struc_best/ (iterations * trials)
        GRBSD_struc_best = standarddev(GRBPERCENTMEAN_struc_best, GRBPERCENT_struc_best, iterations)
        GWGRBSD_struc_best = standarddev(GWGRBPERCENTMEAN_struc_best, GWGRBPERCENT_struc_best, iterations)
        '''------MEAN AND SD AND GRAPH------'''
        '''------DATA DISPLAY------'''
        #Stage
        print(' ')
        print('---------------------------------------------' + stage + '---------------------------------------------')
        
        print('---------------------------------------------' + str(energyInitial) + '---------------------------------------------')
        print(' ')
        #Off-axis
        print('---------------------------------------------Off Axis---------------------------------------------')
        print('GW PERCENT ' + str(GWPERCENT) + '        GRB PERCENT Off Axis ' + str(GRBPERCENT_off) + '        GWGRB PERCENT Off Axis ' + str(GWGRBPERCENT_off))
        print(' ')
        print('GW ' + str(GWFINALnum) + '        GRB Off Axis ' + str(GRBFINALnum_off) + '        GWGRB Off Axis ' + str(GWGRBFINALnum_off) + '        TOTAL ' + str(iterations * trials))
        print(' ')
        print('GW STANDARD DEVIATION ' + str(GWSD) + '        GRB STANDARD DEVIATION Off Axis ' + str(GRBSD_off) + '        GWGRB STANDARD DEVIATION Off Axis ' + str(GWGRBSD_off))
        print(' ')
        print('GW Volume '+ str((round(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3)),4))) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWSD)/(1000**3)),4)))
        print('GRB Volume Off Axis '+ str(round(((((maxDistance)**3) * math.pi * (4/3) * GRBPERCENT_off)/(1000**3)),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GRBSD_off))/(1000**3),4)))
        print('GWGRB Volume Off Axis '+ str(round((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_off)/(1000**3),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWGRBSD_off))/(1000**3),4)))
        print('All volumes in Gpc^3')
        print(' ')
        print('GWGRB/GW, percent detection Off Axis ' + str(round(100 * ((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_off)/(1000**3))/(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3))),2)))
        #Structured Simulation
        print(' ')
        print('---------------------------------------------Structured Simulation---------------------------------------------')
        print('GW PERCENT ' + str(GWPERCENT) + '        GRB PERCENT Structured Simulation ' + str(GRBPERCENT_struc_sim) + '        GWGRB PERCENT Structured Simulation ' + str(GWGRBPERCENT_struc_sim))
        print(' ')
        print('GW ' + str(GWFINALnum) + '        GRB Structured Simulation ' + str(GRBFINALnum_struc_sim) + '        GWGRB Structured Simulation ' + str(GWGRBFINALnum_struc_sim) + '        TOTAL ' + str(iterations * trials))
        print(' ')
        print('GW STANDARD DEVIATION ' + str(GWSD) + '        GRB STANDARD DEVIATION Structured Simulation ' + str(GRBSD_struc_sim) + '        GWGRB STANDARD DEVIATION Structured Simulation ' + str(GWGRBSD_struc_sim))
        print(' ')
        print('GW Volume '+ str(round(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3)),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWSD)/(1000**3)),4)))
        print('GRB Volume Structured Simulation '+ str(round((((maxDistance)**3) * math.pi * (4/3) * GRBPERCENT_struc_sim)/(1000**3),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GRBSD_struc_sim))/(1000**3),4)))
        print('GWGRB Volume Structured Simulation '+ str(round((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_struc_sim)/(1000**3),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWGRBSD_struc_sim))/(1000**3),4)))
        print('All volumes in Gpc^3')
        print(' ')
        print('GWGRB/GW, percent detection Structured Simulation ' + str(round(100 * ((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_struc_sim)/(1000**3))/(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3))),2)))
        #Structured Best
        print(' ')
        print('---------------------------------------------Structured Best---------------------------------------------')
        print('GW PERCENT ' + str(GWPERCENT) + '        GRB PERCENT Structured Best ' + str(GRBPERCENT_struc_best) + '        GWGRB PERCENT Structured Best ' + str(GWGRBPERCENT_struc_best))
        print(' ')
        print('GW ' + str(GWFINALnum) + '        GRB Structured Best ' + str(GRBFINALnum_struc_best) + '        GWGRB Structured Best ' + str(GWGRBFINALnum_struc_best) + '        TOTAL ' + str(iterations * trials))
        print(' ')
        print('GW STANDARD DEVIATION Structured Best ' + str(GWSD) + '        GRB STANDARD DEVIATION Structured Best ' + str(GRBSD_struc_best) + '        GWGRB STANDARD DEVIATION Structured Best ' + str(GWGRBSD_struc_best))
        print(' ')
        print('GW Volume '+ str(round(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3)),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWSD)/(1000**3)),4)))
        print('GRB Volume Structured Best '+ str(round((((maxDistance)**3) * math.pi * (4/3) * GRBPERCENT_struc_best)/(1000**3),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GRBSD_struc_best))/(1000**3),4)))
        print('GWGRB Volume Structured Best '+ str(round((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_struc_best)/(1000**3),4)) + ' +/- ' + str(round(((((maxDistance)**3) * math.pi * (4/3) * GWGRBSD_struc_best))/(1000**3),4)))
        print('All volumes in Gpc^3')
        print(' ')
        print('GWGRB/GW, percent detection Structured Best ' + str(round(100 * ((((maxDistance)**3) * math.pi * (4/3) * GWGRBPERCENT_struc_best)/(1000**3))/(((((maxDistance)**3) * math.pi * (4/3) * GWPERCENT)/(1000**3))),2)))

        # print("\n" + str(numSame) + "\n" + str(numDiff))
        '''------DATA DISPLAY------'''



