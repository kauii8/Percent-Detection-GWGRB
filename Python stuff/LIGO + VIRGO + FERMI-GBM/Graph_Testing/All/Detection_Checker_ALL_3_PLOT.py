'''------HARD IMPORTS------'''
from __future__ import division
'''------HARD IMPORTS------'''
'''------STRUCTURED JET SIMULATION DATA------'''
posstheta = (0.311711013,
             0.322846475,
             0.341496529,
             0.35869701,
             0.368912082,
             0.390223233,
             0.40701068,
             0.42154365,
             0.438145142,
             0.456986664,
             0.478322268,
             0.505945441,
             0.527711271,
             0.546563055,
             0.574092319,
             0.58839203,
             0.61155437,
             0.633401338,
             0.665293504,
             0.733988158,
             0.698791461,
             0.77095764,
             0.827024397,
             0.868679924,
             0.925334616,
             0.978788939,
             1.042590501,
             1.102836584,
             1.191392623,
             1.158365118,
             1.242605513,
             1.314387802,
             1.370932913,
             1.450104466,
             1.544653802,
             1.645395033,
             1.740388129,
             1.821672668,
             1.981748561,
             1.893352504,
             2.045352018,
             2.16343571,
             2.24064773,
             2.337040647,
             2.428999368,
             2.560271953,
             2.708172618,
             2.864569937,
             3.040653322,
             3.273141562,
             3.462051806,
             3.687662071,
             3.927780415,
             4.125478709,
             4.487923056,
             4.747022966,
             5.056287154,
             5.273635384,
             5.461668981,
             5.776795476,
             6.08859465,
             6.646469773,
             6.417328753,
             7.178869386,
             6.883338902,
             7.539708831,
             7.863290437,
             8.259076083,
             8.552992973,
             9.04618403,
             9.335440889,
             9.770807032,
             10.04806921,
             10.29733217,
             10.62712056,
             10.77666894,
             11.00494667,
             11.31648355,
             11.63683968,
             11.96547595,
             12.13265844,
             12.30136594,
             12.55904291,
             12.38659737,
             12.7332597,
             12.91010595,
             13.04397445,
             13.27185707,
             13.3618308,
             13.50060584,
             13.64014783,
             13.82913363,
             14.0205068,
             14.21452827,
             14.51323692,
             14.51036723,
             14.81529273,
             14.91474671,
             15.01734282,
             15.33342742,
             15.32989031,
             15.54254381,
             15.64894267,
             15.75555062,
             16.19996958,
             16.54094608,
             16.77095185,
             17.24628585,
             17.73450758,
             18.49379061,
             19.01732771,
             19.83218686,
             20.82628822,
             20.25094898,
             22.02501624,
             21.41867904,
             22.8095753,
             23.95607819,
             24.63424613,
             25.33077732,
             26.41876873,
             27.54804272,
             29.13462443,
             27.35893712,
             28.53121961,
             29.95939082,
             30.59098342,
             31.67858492,
             32.57536779,
             33.49643352,
             34.20372,
             35.16850899,
             36.41645478,
             37.44365868,
             38.23429192,
             38.49856821
             )

possenergy = [7.97E+51,
              7.97E+51,
              7.97E+51,
              7.97E+51,
              7.97E+51,
              7.97E+51,
              7.97E+51,
              7.88E+51,
              7.97E+51,
              7.88E+51,
              7.88E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.97E+51,
              7.97E+51,
              7.97E+51,
              7.88E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.80E+51,
              7.63E+51,
              7.71E+51,
              7.80E+51,
              7.63E+51,
              7.63E+51,
              7.63E+51,
              7.63E+51,
              7.55E+51,
              7.47E+51,
              7.47E+51,
              7.31E+51,
              7.39E+51,
              7.31E+51,
              7.31E+51,
              7.31E+51,
              7.15E+51,
              7.00E+51,
              7.00E+51,
              6.92E+51,
              6.85E+51,
              6.85E+51,
              6.78E+51,
              6.70E+51,
              6.56E+51,
              6.35E+51,
              6.15E+51,
              5.76E+51,
              5.64E+51,
              5.52E+51,
              5.40E+51,
              5.17E+51,
              5.06E+51,
              4.85E+51,
              4.64E+51,
              4.40E+51,
              4.17E+51,
              4.21E+51,
              3.74E+51,
              3.95E+51,
              3.50E+51,
              3.28E+51,
              3.21E+51,
              2.95E+51,
              2.76E+51,
              2.56E+51,
              2.48E+51,
              2.32E+51,
              2.23E+51,
              2.13E+51,
              2.04E+51,
              1.91E+51,
              1.72E+51,
              1.54E+51,
              1.32E+51,
              1.19E+51,
              1.02E+51,
              8.23E+50,
              9.47E+50,
              6.92E+50,
              5.89E+50,
              5.12E+50,
              4.40E+50,
              3.70E+50,
              3.25E+50,
              2.76E+50,
              2.30E+50,
              1.89E+50,
              1.56E+50,
              1.31E+50,
              1.15E+50,
              9.68E+49,
              7.80E+49,
              7.00E+49,
              6.02E+49,
              5.17E+49,
              4.35E+49,
              3.82E+49,
              3.28E+49,
              2.76E+49,
              2.37E+49,
              2.04E+49,
              1.87E+49,
              1.68E+49,
              1.48E+49,
              1.32E+49,
              1.19E+49,
              1.02E+49,
              1.07E+49,
              8.98E+48,
              1.00E+49,
              8.41E+48,
              7.88E+48,
              7.08E+48,
              6.21E+48,
              5.95E+48,
              5.01E+48,
              4.49E+48,
              5.46E+48,
              4.90E+48,
              4.03E+48,
              3.54E+48,
              3.18E+48,
              2.85E+48,
              2.51E+48,
              2.25E+48,
              1.89E+48,
              1.63E+48,
              1.37E+48,
              1.23E+48,
              1.13E+48
              ]
thetaOffList = [0.0, 0.0031478884304506943, 0.006295776860901389, 0.009443665291352083, 0.012591553721802777, 0.015739442152253473, 0.018887330582704167, 0.02203521901315486, 0.025183107443605555, 0.02833099587405625, 0.031478884304506946, 0.034626772734957637, 0.037774661165408334, 0.040922549595859024, 0.04407043802630972, 0.04721832645676041, 0.05036621488721111, 0.053514103317661814, 0.0566619917481125, 0.0598098801785632, 0.06295776860901389, 0.06610565703946458, 0.06925354546991527, 0.07240143390036596, 0.07554932233081667, 0.07869721076126736, 0.08184509919171805, 0.08499298762216875, 0.08814087605261944, 0.09128876448307013, 0.09443665291352082, 0.09758454134397153, 0.10073242977442222, 0.10388031820487291, 0.10702820663532363, 0.1101760950657743, 0.113323983496225, 0.11647187192667569, 0.1196197603571264, 0.12276764878757708, 0.12591553721802778, 0.12906342564847847, 0.13221131407892917, 0.13535920250937986, 0.13850709093983055, 0.14165497937028124, 0.14480286780073193, 0.14795075623118265, 0.15109864466163334, 0.15424653309208403, 0.15739442152253472, 0.1605423099529854, 0.1636901983834361, 0.1668380868138868, 0.1699859752443375, 0.1731338636747882, 0.1762817521052389, 0.17942964053568958, 0.18257752896614027, 0.18572541739659096, 0.18887330582704165, 0.19202119425749237, 0.19516908268794306, 0.19831697111839378, 0.20146485954884444, 0.20461274797929513, 0.20776063640974582, 0.2109085248401965, 0.21405641327064726, 0.21720430170109792, 0.2203521901315486, 0.22350007856199933, 0.22664796699245, 0.22979585542290068, 0.23294374385335137, 0.2360916322838021, 0.2392395207142528, 0.24238740914470347, 0.24553529757515416, 0.24868318600560488, 0.25183107443605557, 0.25497896286650623, 0.25812685129695695, 0.2612747397274076, 0.26442262815785833, 0.267570516588309, 0.2707184050187597, 0.27386629344921043, 0.2770141818796611, 0.2801620703101118, 0.2833099587405625, 0.2864578471710132, 0.28960573560146385, 0.29275362403191457, 0.2959015124623653, 0.29904940089281595, 0.30219728932326667, 0.30534517775371733, 0.30849306618416805, 0.31164095461461877, 0.31478884304506943, 0.31793673147552015, 0.3210846199059708, 0.32423250833642153, 0.3273803967668722, 0.3305282851973229, 0.3336761736277736, 0.3368240620582243, 0.339971950488675, 0.3431198389191257, 0.3462677273495764, 0.34941561578002706, 0.3525635042104778, 0.35571139264092844, 0.35885928107137915, 0.36200716950182993, 0.36515505793228054, 0.36830294636273125, 0.3714508347931819, 0.37459872322363263, 0.3777466116540833, 0.380894500084534, 0.38404238851498473, 0.3871902769454354, 0.3903381653758861, 0.3934860538063368, 0.39663394223678755, 0.39978183066723816, 0.4029297190976889, 0.4060776075281396, 0.40922549595859026, 0.41237338438904103, 0.41552127281949164, 0.41866916124994236, 0.421817049680393, 0.42496493811084374, 0.4281128265412945, 0.4312607149717451, 0.43440860340219584, 0.4375564918326465, 0.4407043802630972, 0.4438522686935479, 0.44700015712399865, 0.4501480455544493, 0.4532959339849, 0.4564438224153507, 0.45959171084580136, 0.46273959927625213, 0.46588748770670274, 0.46903537613715346, 0.4721832645676042, 0.47533115299805484, 0.4784790414285056, 0.4816269298589563, 0.48477481828940694, 0.4879227067198576, 0.4910705951503083, 0.49421848358075904, 0.49736637201120976, 0.5005142604416604, 0.5036621488721111, 0.5068100373025618, 0.5099579257330125, 0.5131058141634631, 0.5162537025939139, 0.5194015910243646, 0.5225494794548152, 0.525697367885266, 0.5288452563157167, 0.5319931447461673, 0.535141033176618, 0.5382889216070688, 0.5414368100375194, 0.5445846984679701, 0.5477325868984209, 0.5508804753288715, 0.5540283637593222, 0.5571762521897728, 0.5603241406202236, 0.5634720290506743, 0.566619917481125, 0.5697678059115758, 0.5729156943420264, 0.576063582772477, 0.5792114712029277, 0.5823593596333785, 0.5855072480638291, 0.5886551364942798, 0.5918030249247306, 0.5949509133551812, 0.5980988017856319, 0.6012466902160826, 0.6043945786465333, 0.6075424670769841, 0.6106903555074347, 0.6138382439378854, 0.6169861323683361, 0.6201340207987868, 0.6232819092292375, 0.6264297976596882, 0.6295776860901389, 0.6327255745205895, 0.6358734629510403, 0.6390213513814911, 0.6421692398119416, 0.6453171282423923, 0.6484650166728431, 0.6516129051032937, 0.6547607935337444, 0.6579086819641952, 0.6610565703946458, 0.6642044588250965, 0.6673523472555472, 0.670500235685998, 0.6736481241164486, 0.6767960125468994, 0.67994390097735, 0.6830917894078007, 0.6862396778382513, 0.689387566268702, 0.6925354546991528, 0.6956833431296034, 0.6988312315600541, 0.7019791199905049, 0.7051270084209555, 0.7082748968514063, 0.7114227852818569, 0.7145706737123076, 0.7177185621427583, 0.720866450573209, 0.7240143390036599, 0.7271622274341104, 0.7303101158645611, 0.7334580042950117, 0.7366058927254625, 0.7397537811559133, 0.7429016695863638, 0.7460495580168146, 0.7491974464472653, 0.7523453348777159, 0.7554932233081666, 0.7586411117386174, 0.761789000169068, 0.7649368885995187, 0.7680847770299695, 0.7712326654604201,
                0.7743805538908708, 0.7775284423213216, 0.7806763307517722, 0.7838242191822229, 0.7869721076126736, 0.7901199960431243, 0.7932678844735751, 0.7964157729040257, 0.7995636613344763, 0.8027115497649271, 0.8058594381953778, 0.8090073266258285, 0.8121552150562792, 0.8153031034867299, 0.8184509919171805, 0.8215988803476312, 0.8247467687780821, 0.8278946572085326, 0.8310425456389833, 0.834190434069434, 0.8373383224998847, 0.8404862109303355, 0.843634099360786, 0.8467819877912368, 0.8499298762216875, 0.8530777646521381, 0.856225653082589, 0.8593735415130396, 0.8625214299434902, 0.8656693183739409, 0.8688172068043917, 0.8719650952348423, 0.875112983665293, 0.8782608720957438, 0.8814087605261944, 0.8845566489566451, 0.8877045373870958, 0.8908524258175465, 0.8940003142479973, 0.8971482026784479, 0.9002960911088986, 0.9034439795393493, 0.9065918679698, 0.9097397564002507, 0.9128876448307014, 0.9160355332611521, 0.9191834216916027, 0.9223313101220535, 0.9254791985525043, 0.9286270869829548, 0.9317749754134055, 0.9349228638438563, 0.9380707522743069, 0.9412186407047577, 0.9443665291352084, 0.947514417565659, 0.9506623059961097, 0.9538101944265603, 0.9569580828570112, 0.9601059712874618, 0.9632538597179126, 0.9664017481483632, 0.9695496365788139, 0.9726975250092645, 0.9758454134397152, 0.978993301870166, 0.9821411903006166, 0.9852890787310673, 0.9884369671615181, 0.9915848555919687, 0.9947327440224195, 0.9978806324528701, 1.0010285208833207, 1.0041764093137715, 1.0073242977442223, 1.0104721861746728, 1.0136200746051236, 1.0167679630355744, 1.019915851466025, 1.0230637398964757, 1.0262116283269263, 1.029359516757377, 1.0325074051878278, 1.0356552936182783, 1.0388031820487291, 1.04195107047918, 1.0450989589096304, 1.0482468473400812, 1.051394735770532, 1.0545426242009825, 1.0576905126314333, 1.060838401061884, 1.0639862894923346, 1.0671341779227854, 1.070282066353236, 1.0734299547836867, 1.0765778432141375, 1.079725731644588, 1.0828736200750388, 1.0860215085054896, 1.0891693969359402, 1.092317285366391, 1.0954651737968417, 1.0986130622272923, 1.101760950657743, 1.1049088390881938, 1.1080567275186444, 1.1112046159490951, 1.1143525043795457, 1.1175003928099965, 1.1206482812404472, 1.1237961696708978, 1.1269440581013486, 1.1300919465317993, 1.13323983496225, 1.1363877233927007, 1.1395356118231517, 1.142683500253602, 1.1458313886840528, 1.1489792771145035, 1.152127165544954, 1.1552750539754049, 1.1584229424058554, 1.1615708308363064, 1.164718719266757, 1.1678666076972075, 1.1710144961276583, 1.174162384558109, 1.1773102729885596, 1.1804581614190104, 1.1836060498494612, 1.1867539382799117, 1.1899018267103625, 1.1930497151408135, 1.1961976035712638, 1.1993454920017146, 1.2024933804321651, 1.205641268862616, 1.2087891572930667, 1.2119370457235172, 1.2150849341539682, 1.2182328225844188, 1.2213807110148693, 1.2245285994453203, 1.2276764878757709, 1.2308243763062214, 1.2339722647366722, 1.237120153167123, 1.2402680415975735, 1.2434159300280243, 1.246563818458475, 1.2497117068889256, 1.2528595953193764, 1.256007483749827, 1.2591553721802777, 1.2623032606107285, 1.265451149041179, 1.2685990374716298, 1.2717469259020806, 1.2748948143325312, 1.2780427027629822, 1.2811905911934327, 1.2843384796238833, 1.287486368054334, 1.2906342564847846, 1.2937821449152354, 1.2969300333456861, 1.300077921776137, 1.3032258102065875, 1.3063736986370382, 1.3095215870674888, 1.3126694754979396, 1.3158173639283903, 1.3189652523588409, 1.3221131407892917, 1.3252610292197424, 1.328408917650193, 1.331556806080644, 1.3347046945110943, 1.337852582941545, 1.341000471371996, 1.3441483598024464, 1.3472962482328972, 1.350444136663348, 1.3535920250937987, 1.3567399135242493, 1.3598878019547, 1.3630356903851508, 1.3661835788156014, 1.3693314672460521, 1.3724793556765027, 1.3756272441069535, 1.378775132537404, 1.3819230209678548, 1.3850709093983056, 1.3882187978287561, 1.391366686259207, 1.394514574689658, 1.3976624631201082, 1.400810351550559, 1.4039582399810098, 1.4071061284114603, 1.410254016841911, 1.4134019052723619, 1.4165497937028126, 1.4196976821332632, 1.4228455705637137, 1.4259934589941645, 1.4291413474246153, 1.4322892358550658, 1.4354371242855166, 1.4385850127159674, 1.441732901146418, 1.4448807895768687, 1.4480286780073197, 1.45117656643777, 1.4543244548682208, 1.4574723432986718, 1.4606202317291221, 1.463768120159573, 1.4669160085900235, 1.4700638970204745, 1.473211785450925, 1.4763596738813756, 1.4795075623118266, 1.4826554507422771, 1.4858033391727277, 1.4889512276031784, 1.4920991160336292, 1.4952470044640798, 1.4983948928945305, 1.5015427813249813, 1.5046906697554319, 1.5078385581858826, 1.5109864466163332, 1.514134335046784, 1.5172822234772347, 1.5204301119076853, 1.523578000338136, 1.5267258887685868, 1.5298737771990374, 1.5330216656294884, 1.536169554059939, 1.5393174424903895, 1.5424653309208403, 1.545613219351291, 1.5487611077817416, 1.5519089962121924, 1.5550568846426431, 1.5582047730730937, 1.5613526615035445, 1.5645005499339952, 1.5676484383644458, 1.5707963267948966]

#energy = 8e51
energyOffList = [8e+51, 8.000007116428042e+51, 8.000014261596675e+51, 8.000020752355992e+51, 8.000026142835672e+51, 8.000031708055945e+51, 8.00003412602321e+51, 8.000037246368737e+51, 8.000040386174107e+51, 8.000042947369381e+51, 8.000044708804451e+51, 8.000045567778245e+51, 8.000045554434805e+51, 8.000044334166625e+51, 8.000042342258424e+51, 8.000039039517205e+51, 8.000033725277687e+51, 8.000027196661306e+51, 8.000017276036357e+51, 8.000005694782481e+51, 7.999989690743664e+51, 7.999970884836726e+51, 7.999945361278315e+51, 8.000079299734689e+51, 8.000080241213618e+51, 8.000081730981357e+51, 8.000082557782511e+51, 8.000083913106769e+51, 8.000084627470712e+51, 8.000085910038944e+51, 8.000086502739921e+51, 8.000084577540949e+51, 8.000085245432535e+51, 8.000084995646917e+51, 8.000085202008808e+51, 8.000084687871376e+51, 8.000084534505978e+51, 8.00009059034968e+51, 8.000082817588894e+51, 8.000081652368968e+51, 8.000080030138447e+51, 8.00007795519253e+51, 8.0000757080879e+51, 8.000072475698899e+51, 8.000069141620379e+51, 8.000064729406427e+51, 8.000060198595222e+51, 8.000054012647277e+51, 8.0000467586218e+51, 8.000038886358035e+51, 8.000028991574617e+51, 8.000017391187889e+51, 8.000003961113173e+51, 7.999989705566162e+51, 7.999971426896003e+51, 7.999950172632101e+51, 2.9733027197710758e+51, 1.5931245327540685e+51, 7.963481508109669e+50, 4.020468439758637e+50, 2.2021217213726874e+50, 1.2744996737273345e+50, 7.397104231906848e+49, 4.523045177087885e+49, 2.8977677772550305e+49, 1.931842158720205e+49, 1.3316794678464153e+49, 9.442110833822473e+48, 6.857459081443361e+48, 5.084407366922999e+48, 3.838353799191894e+48, 2.9439995498017945e+48, 2.290041495273647e+48, 1.8039052598231057e+48, 1.4371458475020373e+48, 1.1567429481011547e+48, 9.397644850479807e+47, 7.700130693389688e+47, 6.358712625949331e+47, 5.288890845086042e+47, 4.4284106802305814e+47, 3.730862092362399e+47, 3.1612682513211787e+47, 2.6930019034980986e+47, 2.3056015978552564e+47, 1.983206355726511e+47, 1.7134209424608276e+47, 1.4864846079701929e+47, 1.2946561323248465e+47, 1.131754689445884e+47, 9.928140764793484e+46, 8.738201956091917e+46, 7.715102132445869e+46, 6.832177926185613e+46, 6.067530136929574e+46, 5.403086019680674e+46, 4.823862518199604e+46, 4.3173840023364636e+46, 3.8732195538230223e+46, 3.482613310853929e+46, 3.138187667097279e+46, 2.8337038195513826e+46, 2.5638676955581007e+46, 2.324171966869117e+46, 2.1107668984795103e+46, 1.9203543428473668e+46, 1.75010039420269e+46, 1.5975631501912466e+46, 1.4606327539860312e+46, 1.337481457775579e+46, 1.2265218947090947e+46, 1.1263720985687962e+46, 1.0358260896377315e+46, 9.538290674923578e+45, 8.79456429086713e+45, 8.118959730216676e+45, 7.504327656719082e+45, 6.944362376111132e+45, 6.433491540139912e+45, 5.966781639403957e+45, 5.539856833933152e+45, 5.1488290798118446e+45, 4.7902378464584405e+45, 4.4609979962699e+45, 4.15835462730269e+45, 3.879843869375575e+45, 3.623258781605301e+45, 3.386619630687941e+45, 3.168147938895937e+45, 2.966243782567696e+45, 2.779932943328826e+45, 2.606941230795485e+45, 2.4466054112569783e+45, 2.2978631623924615e+45, 2.159752607009275e+45, 2.0314017682734214e+45, 1.912019239806701e+45, 1.8008859185051707e+45, 1.6973476684818677e+45, 1.600808802112423e+45, 1.5107262792223696e+45, 1.4266045383849912e+45, 1.3479908854170028e+45, 1.2744713737390856e+45, 1.205667119534226e+45, 1.1412310017821345e+45, 1.0808447034344424e+45, 1.0242160553593492e+45, 9.710766493437628e+44, 9.211796904929381e+44, 8.742980628978859e+44, 8.302225855201834e+44, 7.887604379340097e+44, 7.497337379185119e+44, 7.129782549555874e+44, 6.783422454960745e+44, 6.456853974461149e+44, 6.148778727220216e+44, 5.857994379521923e+44, 5.583386744888694e+44, 5.323922598499622e+44, 5.07864313556912e+44, 4.846658010830644e+44, 4.627139902901933e+44, 4.419319553183575e+44, 4.222481234166564e+44, 4.0359586066574965e+44, 3.8591309295618705e+44, 3.691419589536152e+44, 3.5322849210986234e+44, 3.3812232907105127e+44, 3.2377644209515375e+44, 3.1014689332481557e+44, 2.9719260897027022e+44, 2.848751716443807e+44, 2.731586292596208e+44, 2.6200931904755888e+44, 2.5139570539655105e+44, 2.4128823032514516e+44, 2.316591755180191e+44, 2.224825349499517e+44, 2.1373389721208844e+44, 2.0539033673493792e+44, 1.9743031317487017e+44, 1.8983357829627642e+44, 1.8258108974059987e+44, 1.7565493112699925e+44, 1.6903823797779364e+44, 1.627151290057123e+44, 1.5667064233987328e+44, 1.5089067630339366e+44, 1.4536193438851193e+44, 1.4007187410478878e+44, 1.3500865940315946e+44, 1.3016111640326426e+44, 1.2551869217395874e+44, 1.2107141633742e+44, 1.1680986528592218e+44, 1.12725128817425e+44, 1.0880877901166286e+44, 1.050528411826718e+44, 1.0144976675667764e+44, 9.799240793616357e+43, 9.467399402184015e+43, 9.14881092741937e+43, 8.842867220543236e+43, 8.548991620104665e+43, 8.266637137786022e+43, 7.995284759252615e+43, 7.73444185208972e+43, 7.483640673466246e+43, 7.242436970710369e+43, 7.01040866848874e+43, 6.787154636742848e+43, 6.572293533963978e+43, 6.365462720781832e+43, 6.166317239204484e+43, 5.974528853182283e+43, 5.789785146476836e+43, 5.61178867410135e+43, 5.440256163862623e+43, 5.274917764777028e+43, 5.115516339358856e+43, 4.961806796987999e+43, 4.813555465754676e+43, 4.67053950035908e+43, 4.532546323808567e+43, 4.399373100807124e+43, 4.270826240874736e+43, 4.1467209293658713e+43, 4.026880684677891e+43, 3.911136940053466e+43, 3.79932864848733e+43, 3.691301909344171e+43, 3.5869096153863995e+43, 3.4860111189944655e+43, 3.3884719164411103e+43, 3.2941633491541474e+43, 3.202962320970745e+43, 3.114751030448612e+43, 3.0294167173598853e+43, 2.946851422547484e+43, 2.8669517603755817e+43, 2.789618703053497e+43, 2.714757376157104e+43, 2.6422768647132227e+43, 2.572090029252074e+43, 2.504113331268006e+43, 2.4382666675642116e+43, 2.3744732129873817e+43, 2.3126592710892423e+43,
                 2.2527541322783407e+43, 2.1946899390527448e+43, 2.1384015579276694e+43, 2.083826457695146e+43, 2.0309045936741825e+43, 1.9795782976296756e+43, 1.929792173057268e+43, 1.8814929955485896e+43, 1.8346296179680197e+43, 1.7891528801873733e+43, 1.7450155231394737e+43, 1.702172106964998e+43, 1.6605789330401394e+43, 1.6201939696839058e+43, 1.5809767813559196e+43, 1.5428884611655565e+43, 1.505891566523508e+43, 1.469950057776034e+43, 1.4350292396710988e+43, 1.4010957055136958e+43, 1.3681172838756832e+43, 1.3360629877323847e+43, 1.304902965905585e+43, 1.2746084566986263e+43, 1.2451517436156557e+43, 1.2165061130628217e+43, 1.1886458139345746e+43, 1.1615460189933364e+43, 1.1351827879557964e+43, 1.1095330322034278e+43, 1.0845744810393027e+43, 1.060285649417182e+43, 1.0366458070728855e+43, 1.0136349489912983e+43, 9.912337671460573e+42, 9.694236234520155e+42, 9.481865238736715e+42, 9.275050936356767e+42, 9.073625534841623e+42, 8.877426969503602e+42, 8.68629868570216e+42, 8.500089430162609e+42, 8.318653050998868e+42, 8.141848306045129e+42, 7.969538679119285e+42, 7.80159220385958e+42, 7.637881294794169e+42, 7.478282585319571e+42, 7.32267677227846e+42, 7.170948466845466e+42, 7.02298605143925e+42, 6.87868154239675e+42, 6.737930458155583e+42, 6.600631692703054e+42, 6.466687394063595e+42, 6.33600284760328e+42, 6.208486363945654e+42, 6.084049171297739e+42, 5.962605311998017e+42, 5.844071543105529e+42, 5.728367240857534e+42, 5.615414308831174e+42, 5.505137089653164e+42, 5.397462280107094e+42, 5.292318849496103e+42, 5.18963796112426e+42, 5.0893528967672713e+42, 4.9913989840070914e+42, 4.8957135263133354e+42, 4.8022357357570375e+42, 4.71090666824892e+42, 4.621669161199134e+42, 4.534467773498739e+42, 4.4492487277298e+42, 4.365959854512258e+42, 4.284550538902811e+42, 4.204971668761966e+42, 4.127175585011172e+42, 4.0511160337041614e+42, 3.9767481198402115e+42, 3.904028262850399e+42, 3.832914153690653e+42, 3.763364713478047e+42, 3.6953400536101587e+42, 3.628801437308835e+42, 3.5637112425335036e+42, 3.500032926210309e+42, 3.437730989726233e+42, 3.376770945639246e+42, 3.3171192855580446e+42, 3.2587434491461655e+42, 3.201611794207423e+42, 3.1456935678119985e+42, 3.0909588784230356e+42, 3.037378668986352e+42, 2.9849246909465905e+42, 2.933569479155329e+42, 2.8832863276372695e+42, 2.834049266183007e+42, 2.785833037737012e+42, 2.7386130765519168e+42, 2.6923654870800973e+42, 2.6470670235761127e+42, 2.6026950703831296e+42, 2.5592276228787996e+42, 2.516643269056365e+42, 2.474921171717705e+42, 2.434041051256315e+42, 2.3939831690087882e+42, 2.3547283111543633e+42, 2.3162577731426413e+42, 2.2785533446308668e+42, 2.241597294912296e+42, 2.2053723588182515e+42, 2.169861723077143e+42, 2.1350490131139835e+42, 2.1009182802753566e+42, 2.067453989464337e+42, 2.0346410071713068e+42, 2.0024645898867695e+42, 1.9709103728828428e+42, 1.9399643593504742e+42, 1.9096129098803175e+42, 1.8798427322751922e+42, 1.8506408716827825e+42, 1.8219947010375942e+42, 1.793891911801546e+42, 1.766320504993002e+42, 1.7392687824944653e+42, 1.7127253386295153e+42, 1.6866790519996466e+42, 1.6611190775726766e+42, 1.636034839013758e+42, 1.6114160212513225e+42, 1.5872525632696843e+42, 1.5635346511211238e+42, 1.5402527111498767e+42, 1.5173974034211343e+42, 1.4949596153483134e+42, 1.4729304555118696e+42, 1.4513012476636618e+42, 1.430063524910477e+42, 1.4092090240710816e+42, 1.3887296802010546e+42, 1.368617621279969e+42, 1.348865163055615e+42, 1.329464804040325e+42, 1.3104092206543218e+42, 1.2916912625115115e+42, 1.2733039478430594e+42, 1.2552404590544432e+42, 1.2374941384116437e+42, 1.2200584838524126e+42, 1.2029271449186401e+42, 1.1860939188060186e+42, 1.1695527465273062e+42, 1.153297709185549e+42, 1.137323024353947e+42, 1.1216230425589216e+42, 1.10619224386319e+42, 1.0910252345457757e+42, 1.0761167438759521e+42, 1.0614616209781314e+42, 1.0470548317850376e+42, 1.0328914560762438e+42, 1.0189666845997384e+42, 1.0052758162736923e+42, 9.918142554661558e+41, 9.785775093503007e+41, 9.655611853328234e+41, 9.527609885534096e+41, 9.401727194530357e+41, 9.277922714090556e+41, 9.15615628435093e+41, 9.036388629437781e+41, 8.91858133570438e+41, 8.802696830559344e+41, 8.688698361869459e+41, 8.576549977918703e+41, 8.466216507908557e+41, 8.357663542982024e+41, 8.250857417757527e+41, 8.14576519235655e+41, 8.042354634911148e+41, 7.940594204537149e+41, 7.84045303475966e+41, 7.741900917377526e+41, 7.64490828675394e+41, 7.549446204521441e+41, 7.455486344688865e+41, 7.363000979138578e+41, 7.271962963503434e+41, 7.182345723411923e+41, 7.094123241091592e+41, 7.007270042319643e+41, 6.921761183712466e+41, 6.837572240342478e+41, 6.754679293674691e+41, 6.673058919813029e+41, 6.592688178048366e+41, 6.513544599698949e+41, 6.4356061772361504e+41, 6.358851353686529e+41, 6.283259012303239e+41, 6.2088084664988425e+41, 6.135479450032711e+41, 6.063252107445593e+41, 5.992106984734793e+41, 5.922025020262939e+41, 5.85298753589487e+41, 5.784976228355238e+41, 5.717973160801341e+41, 5.651960754605682e+41, 5.586921781341841e+41, 5.522839354968621e+41, 5.459696924207109e+41, 5.397478265105048e+41, 5.336167473783907e+41, 5.275748959363629e+41, 5.216207437060128e+41, 5.157527921451148e+41, 5.099695719905828e+41, 5.0426964261736445e+41, 4.9865159141286875e+41, 4.931140331664846e+41, 4.876556094738014e+41, 4.8227498815518595e+41, 4.7697086268825594e+41, 4.717419516539703e+41, 4.665869981959132e+41, 4.6150476949247465e+41, 4.5649405624155654e+41, 4.515536721575243e+41, 4.466824534800066e+41, 4.418792584943447e+41, 4.371429670632738e+41, 4.324724801696641e+41, 4.278667194699326e+41, 4.233246268579168e+41, 4.1884516403892734e+41, 4.144273121137159e+41, 4.100700711720912e+41, 4.057724598959716e+41, 4.015335151716068e+41, 3.9735229171075096e+41, 3.932278616805474e+41, 3.89159314341923e+41, 3.8514575569626914e+41, 3.811863081401961e+41]
energyinitial = 8e51
poss_differencediv = possenergy[0] / energyinitial
print(poss_differencediv)
for i in range(0, len(possenergy)):
    possenergy[i] /= poss_differencediv
print(possenergy[len(possenergy)-1])
'''------STRUCTURED JET SIMULATION DATA------'''
'''------IMPORTS-------'''
import numpy as np
import cmath
import math
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from operator import add
import random
import pylab
'''------IMPORTS-------'''
'''------FUNCTION------'''


def AP_PLUS(eta, a, b, psi):
    ret = math.sin(eta) * ((a * math.cos(2 * psi)) + (b * math.sin(2 * psi)))
    return ret


def AP_CROSS(eta, a, b, psi):
    ret = math.sin(eta) * ((b * math.cos(2 * psi)) - (a * math.sin(2 * psi)))
    return ret


def afunction(chi, beta, theta, phi, lambd):
    ret = ((1/16) * math.sin(2 * chi) * (3 - math.cos(2 * beta)) * (3 - math.cos(2 * theta))
           * math.cos(2 * (phi + lambd)))

    + ((1/4) * math.cos(2 * chi) * math.sin(beta) * (3 - math.cos(2 * theta))
       * math.sin(2 * (phi + lambd)))

    + ((1/4) * math.sin(2 * chi) * math.sin(2 * beta)
       * math.sin(2 * theta) * math.cos(phi + lambd))

    + ((1/2) * math.cos(2 * chi) * math.cos(beta) *
       math.sin(2 * theta) * math.sin(phi + lambd))

    + ((3/4) * math.sin(2 * chi) * (math.cos(beta) ** 2) * (math.sin(theta) ** 2))
    return ret


def bfunction(chi, beta, theta, phi, lambd):
    ret = (math.cos(2 * chi) * math.sin(beta) *
           math.cos(theta) * math.cos(2 * (phi + lambd)))

    - ((1/4) * math.sin(2 * chi) * (3 - math.cos(2 * beta))
       * math.cos(theta) * math.sin(2 * (phi * lambd)))

    + (math.cos(2 * chi) * math.cos(beta) *
       math.sin(theta) * math.cos(phi + lambd))

    - ((1/2) * math.sin(2 * chi) * math.sin(2 * beta)
       * math.sin(theta) * math.sin(phi + lambd))
    return ret


def COMPASS_TO_ANGLE(compassdirection):
    ret = ((5 * math.pi) / 2) - compassdirection
    return ret


def DMS_TO_DEGREES(degs, mins, secs):
    ret = degs + (mins/60) + (secs/3600)
    return ret


def rotate(l, n):
    return l[n:] + l[:n]


def standarddev(x, mu, N):
    summ = 0
    for deff in range(0, N):
        adder = (x[deff] - mu) ** 2
        summ = summ + adder
    ret = math.sqrt(summ/(N-1))
    return ret


def angletoenergy(theta, energyorig, thetac, alpha):
    ret = energyorig * math.e ** (-1 * ((theta/thetac) ** alpha))
    return ret


def delta_function(beta, thetaObs, thetaj):
    ret = 1 - beta * math.cos(thetaObs - thetaj)
    return ret


'''------FUNCTION------'''
'''------CREATE POINTS------'''
Dv_LOUIS, Dv_WASH, Dv_VIRGO = 145, 145, 90
trials = 100  # input("Enter the number of points you want to test: ") + 1
iterations = 100
GRBFINALnum_off, GWGRBFINALnum_off, GRBFINALnum_struc_best, GWGRBFINALnum_struc_best, GRBFINALnum_struc_sim, GWGRBFINALnum_struc_sim = 0, 0, 0, 0, 0, 0
GWPERCENTMEAN, GWFINALnum = [], 0
distance = 100
for q in range(0, iterations):
    RHO_PLUS_LOUIS, RHO_CROSS_LOUIS, RHO_PLUS_WASH, RHO_CROSS_WASH, RHO_PLUS_VIRGO, RHO_CROSS_VIRGO = [], [], [], [], [], []
    a_AP_LOUIS, a_AP_WASH, a_AP_VIRGO, b_AP_LOUIS, b_AP_WASH, b_AP_VIRGO = [], [], [], [], [], []
    h_LOUIS, h_WASH, h_VIRGO, reach = [], [], [], []
    phi, theta, rotationpercent, rotationangle, thetaObs, psi = [], [], [], [], [], [],
    GRBTESTnum_off, GRBTESTnum_struc_best, GRBTESTnum_struc_sim = 0, 0, 0
    GWTESTnum = 0
    for z in range(0, trials):
        phi.append(random.uniform(0.0, 2 * math.pi))
        theta.append(random.uniform(0.0, math.pi))
        #thetaObs.append(random.uniform(0, math.pi))
        thetaObs = np.linspace(0, math.pi/2, trials).tolist()
        psi.append(random.uniform(0, math.pi * 2))
        # Fermi Observation angle set
    '''------CREATE POINTS-------'''
    '''------OFF AXIS------'''
    fluence_off, GRBTEST_off = [], []
    gamma = 100
    thetaj = 10
    beta = math.sqrt((-1 * ((1/gamma) ** 2)) + 1)
    realOffThetaList, realOffEnergyList = [], []

    for a in range(0, len(thetaObs)):
        realOffThetaList.append(
            min(thetaOffList, key=lambda x: abs(x-thetaObs[a])))
        index = min(range(len(thetaOffList)),
                    key=lambda z: abs(thetaOffList[z]-thetaObs[a]))
        realOffEnergyList.append(energyOffList[index])

    for a in range(0, trials):
        # Calls the energy function from class then divides by 4 pi r squared to get fluence
        fluence_off.append(
            realOffEnergyList[a] / (4 * math.pi * ((distance * 3.086e24)**2)))
    '''------OFF AXIS------'''
    '''------STRUCTURED JET SIMULATION------'''
    real_theta_list, real_energy_list, fluence_struc_sim, GRBTEST_struc_sim = [], [], [], []
    thetaj = 10
    alpha = 1.9
    thetac = 9
    thetaj = 10
    for h in range(0, len(thetaObs)):
        difference_previous = 1
        realtheta = 0
        thetanumber = 0

        if math.degrees(thetaObs[h]) > 38.49856821:
            real_energy_list.append(0)
        else:
            for j in range(0, len(posstheta)):
                thetatemp = posstheta[j]
                difference = math.fabs(thetatemp - math.degrees(thetaObs[h]))
                if difference_previous > difference:
                    difference_previous = difference
                    thetanumber = j
                    realtheta = thetatemp
            real_theta_list.append(realtheta)
            real_energy_list.append(possenergy[thetanumber])

    for p in range(0, trials):
        fluence_struc_sim.append(
            real_energy_list[p]/(4 * math.pi * ((distance * 3.086e24) ** 2)))

        # if GRBTEST_off[p] == GRBFINALnum_struc_sim[p]:
        #     numSame += 1
        # if GRBTEST_off[p] != GRBTEST_struc_sim[p]:
        #     numDiff += 1
    '''------STRUCTURED JETS SIMULATION------'''
    '''------STRUCTURED JET BEST FIT------'''
    fluence_struc_best, GRBTEST_struc_best, energy_struc_best = [], [], []
    thetaj = 10
    alpha = 1.9
    thetac = 9
    thetaj = 10
    for a in range(0, trials):
        energy_struc_best.append(angletoenergy(
            thetaObs[a], energyinitial, math.radians(thetac), alpha))
        fluence_struc_best.append(
            energy_struc_best[a]/(4 * math.pi * ((distance * 3.086e24) ** 2)))

    '''------STRUCTURED JET BEST FIT------'''

thetaobs_struc = thetaObs
for u in range(0, len(thetaObs)):
    thetaObs[u] = math.degrees(thetaObs[u])
off_axis_graph = plt.plot(thetaObs, fluence_off, label='Off Axis')
ax = plt.subplot(111)
plt.title(r'$\theta_{obs}$' + ' vs Fluence at ' + str(distance) +
          ' Mpc' + ' and ' + r'$E_{iso} = 10^{52}$' + ' erg')
plt.xlabel(r'$\theta_{obs}$' + '[deg]')
plt.ylabel('Fluence (' + str(distance) + '100Mpc / d)' +
           r'$^2$'+' [erg/'+'cm' + r'$^2$' + '] ')
plt.yscale('log')
plt.xlim(0, math.pi)
axes = plt.gca()
axes.set_xlim([0, 38])
axes.set_ylim([1e-9, 1e-1])

GBM_SENS, SWIFT_SENS = [], []
for u in range(0, trials):
    GBM_SENS.append(2.5e-8)
    SWIFT_SENS.append(4.22e-10)

Fermi_GBM_Sensitivity = plt.plot(thetaObs, GBM_SENS, linestyle='--', color='k')

ax.annotate('Fermi-GBM/Swift-BAT sensitivity',
            xy=(0, .000000003), xytext=(.5, .00000004), color='k', size = 9)
ax.grid(color='k', linestyle='-', linewidth=.2)

structured_jet_sim_graph = plt.plot(
    thetaObs, fluence_struc_sim, label='Structured Jet Simulation Data')

structured_jet_best_graph = plt.plot(
    thetaObs, fluence_struc_best, label='Structured Jet Best Fit')
pylab.legend(loc='upper right')
plt.show()

'''
ax = plt.subplot(111)
plt.title('Theta vs Energy at 100 Mpc')
plt.xlabel('Thetaobs (degrees)')
plt.ylabel('Fluence (erg/cm^2)')
plt.yscale('log')
plt.xlim(0, math.pi)
axes = plt.gca()
axes.set_xlim([0,100])
ax.set_yscale('log')
axes.set_ylim([1e46,1e51])

structured_jet_sim_graph = plt.plot(thetaObs, real_energy_list, label = 'Structured Jet Simulation Data')
structured_jet_best_graph = plt.plot(thetaObs, energy_struc_best, label = 'Structured Jet Best Fit')
pylab.legend(loc='best')
plt.show()
'''
'''------GRAPHS------'''
